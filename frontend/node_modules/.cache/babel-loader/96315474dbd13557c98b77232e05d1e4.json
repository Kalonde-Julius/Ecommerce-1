{"ast":null,"code":"var _jsxFileName = \"/Users/shravanmeena/Desktop/ecommerce/frontend/src/screens/Register.js\";\nimport React, { Component } from \"react\";\nimport { Form, Button, Row, Col, Container } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport FormContainer from \"../component/FormContainer\"; // import { register } from \"../actions/userActions\";\n\nimport { connect } from \"react-redux\";\nimport Loader from \"../component/Loader\";\nimport Error from \"../component/common/Error\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n\n    this.submitHandler = async e => {\n      this.setState({\n        loader: true\n      });\n      e.preventDefault();\n      const {\n        name,\n        email,\n        password\n      } = this.state;\n\n      if (!email && !password.length > 5 && !name.length > 3) {\n        this.setState({\n          error: true,\n          loader: false\n        });\n        return;\n      } // this.props.dispatch(register(name, email, password))\n\n\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      await axios.post(\"/api/users\", {\n        name,\n        email,\n        password\n      }, config).then(data => {\n        this.setState({\n          confirm_register: true,\n          error: false,\n          loader: false\n        });\n      }).catch(err => {\n        console.log(err);\n        this.setState({\n          loader: false\n        });\n      });\n    };\n\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      confirm_password: \"\",\n      error: false,\n      confirm_register: false,\n      loader: false\n    };\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n\n    if (this.props.getLoginInfoData.userInfo) {\n      this.props.history.push(\"/\");\n    }\n  }\n\n  render() {\n    const {\n      name,\n      email,\n      password,\n      confirm_register,\n      loader\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), confirm_register && /*#__PURE__*/_jsxDEV(Error, {\n        variant: \"success\",\n        message: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"You have registered succesfully. Please\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"login\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: \"red\"\n              },\n              children: \"signin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), this.state.error && /*#__PURE__*/_jsxDEV(Error, {\n        variant: \"danger\",\n        message: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Password must be 6 chars long\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Must be a valid email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Name is required min 3 chars\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicEmail\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter your name\",\n            value: name,\n            onChange: e => this.setState({\n              name: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicEmail\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"Enter email\",\n            value: email,\n            onChange: e => this.setState({\n              email: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n            className: \"text-muted\",\n            children: \"We'll never share your email with anyone else.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Password\",\n            value: password,\n            onChange: e => this.setState({\n              password: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), loader ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          disabled: !name || !password || !email,\n          variant: \"primary\",\n          type: \"submit\",\n          onClick: this.submitHandler,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"py-4 justify-content-md-center\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: [\"Have an account \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/login\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    getLoginInfoData: state.userLogin\n  };\n};\n\nexport default connect(mapStateToProps)(Register);","map":{"version":3,"sources":["/Users/shravanmeena/Desktop/ecommerce/frontend/src/screens/Register.js"],"names":["React","Component","Form","Button","Row","Col","Container","Link","FormContainer","connect","Loader","Error","axios","Register","constructor","submitHandler","e","setState","loader","preventDefault","name","email","password","state","length","error","config","headers","post","then","data","confirm_register","catch","err","console","log","confirm_password","componentDidMount","window","scrollTo","props","getLoginInfoData","userInfo","history","push","render","color","target","value","mapStateToProps","userLogin"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Form, Button, Row, Col, Container } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport FormContainer from \"../component/FormContainer\";\n// import { register } from \"../actions/userActions\";\nimport { connect } from \"react-redux\";\nimport Loader from \"../component/Loader\";\nimport Error from \"../component/common/Error\";\nimport axios from \"axios\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      confirm_password: \"\",\n      error: false,\n      confirm_register: false,\n      loader: false,\n    };\n  }\n\n  submitHandler = async (e) => {\n    this.setState({\n      loader: true,\n    });\n    e.preventDefault();\n    const { name, email, password } = this.state;\n    if (!email && !password.length > 5 && !name.length > 3) {\n      this.setState({\n        error: true,\n        loader: false,\n      });\n      return;\n    }\n    // this.props.dispatch(register(name, email, password))\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    await axios\n      .post(\"/api/users\", { name, email, password }, config)\n      .then((data) => {\n        this.setState({\n          confirm_register: true,\n          error: false,\n          loader: false,\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n        this.setState({\n          loader: false,\n        });\n      });\n  };\n  componentDidMount() {\n    window.scrollTo(0, 0);\n\n    if (this.props.getLoginInfoData.userInfo) {\n      this.props.history.push(\"/\");\n    }\n  }\n  render() {\n    const { name, email, password, confirm_register, loader } = this.state;\n\n    return (\n      <FormContainer>\n        <h2>Create account</h2>\n        {confirm_register && (\n          <Error\n            variant='success'\n            message={\n              <p>\n                You have registered succesfully. Please{\" \"}\n                <Link to='login'>\n                  <span style={{ color: \"red\" }}>signin</span>\n                </Link>\n              </p>\n            }\n          />\n        )}\n        {this.state.error && (\n          <Error\n            variant='danger'\n            message={\n              <div>\n                <p>Password must be 6 chars long</p>{\" \"}\n                <p>Must be a valid email address</p>{\" \"}\n                <p>Name is required min 3 chars</p>\n              </div>\n            }\n          />\n        )}\n        <Form>\n          <Form.Group controlId='formBasicEmail'>\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type='text'\n              placeholder='Enter your name'\n              value={name}\n              onChange={(e) => this.setState({ name: e.target.value })}\n            />\n          </Form.Group>\n\n          <Form.Group controlId='formBasicEmail'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              type='email'\n              placeholder='Enter email'\n              value={email}\n              onChange={(e) => this.setState({ email: e.target.value })}\n            />\n            <Form.Text className='text-muted'>\n              We'll never share your email with anyone else.\n            </Form.Text>\n          </Form.Group>\n\n          <Form.Group controlId='formBasicPassword'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type='password'\n              placeholder='Password'\n              value={password}\n              onChange={(e) => this.setState({ password: e.target.value })}\n            />\n          </Form.Group>\n\n          {loader ? (\n            <Loader />\n          ) : (\n            <Button\n              disabled={!name || !password || !email}\n              variant='primary'\n              type='submit'\n              onClick={this.submitHandler}>\n              Submit\n            </Button>\n          )}\n        </Form>\n\n        <Row className='py-4 justify-content-md-center'>\n          <Col>\n            Have an account <Link to='/login'>Login</Link>\n          </Col>\n        </Row>\n      </FormContainer>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    getLoginInfoData: state.userLogin,\n  };\n};\n\nexport default connect(mapStateToProps)(Register);\n"]},"metadata":{},"sourceType":"module"}