{"ast":null,"code":"var _jsxFileName = \"/Users/shravanmeena/Desktop/ecommerce/frontend/src/screens/ProductEditScreen.js\";\nimport React, { Component } from \"react\";\nimport { Form, Button, Row, Col, Container } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport FormContainer from \"../component/FormContainer\";\nimport { getUserDetails } from \"../actions/userActions\";\nimport { connect } from \"react-redux\";\nimport Loader from \"../component/Loader\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ProductEditScreen extends Component {\n  constructor() {\n    super();\n\n    this.submitHandler = e => {\n      this.setState({\n        loading: true\n      }); // e.preventDefault();\n\n      const {\n        name,\n        price,\n        image,\n        brand,\n        category,\n        countInStock,\n        numReviews,\n        description\n      } = this.state;\n      const data = {\n        name,\n        price,\n        image,\n        brand,\n        category,\n        countInStock,\n        numReviews,\n        description\n      };\n      const token = this.props.getLoginInfoData.userInfo.token;\n      const config = {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      };\n      axios.put(`http://localhost:5000/api/products/${this.props.match.params.id}`, data, config).then(response => {\n        this.props.history.push(`/admin/productslist`);\n        this.setState({\n          loading: false\n        });\n      }).catch(error => {\n        console.log(error);\n        this.setState({\n          loading: false\n        });\n      });\n    };\n\n    this.onFileChange = event => {\n      this.setState({\n        uploading: true\n      });\n      var formdata = new FormData();\n      formdata.append(\"image\", event.target.files[0]);\n      formdata.append(\"filetype\", \"IMG\");\n      axios({\n        method: \"post\",\n        url: `http://localhost:5000/api/upload`,\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        },\n        data: formdata\n      }).then(res => {\n        this.setState({\n          imageUrl: res.data,\n          uploading: false\n        });\n      }).catch(err => {\n        this.setState({\n          uploading: false\n        });\n        console.log(\"Error : \" + err);\n      });\n    };\n\n    this.state = {\n      name: \"\",\n      price: \"\",\n      image: \"\",\n      brand: \"\",\n      category: \"\",\n      countInStock: \"\",\n      numReviews: 0,\n      imageUrl: \"https://placeimg.com/320/320/animals\",\n      description: \"\",\n      loading: true,\n      uploading: false\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    const token = this.props.getLoginInfoData.userInfo.token;\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    axios.get(`http://localhost:5000/api/products/${this.props.match.params.id}`, config).then(response => {\n      console.log(response.data);\n      this.setState({\n        name: response.data.name,\n        price: response.data.price,\n        image: response.data.image,\n        brand: response.data.brand,\n        category: response.data.category,\n        countInStock: response.data.countInStock,\n        numReviews: response.data.numReviews,\n        description: response.data.description,\n        loading: false\n      });\n    }).catch(error => {\n      console.log(error);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      name,\n      price,\n      image,\n      brand,\n      category,\n      countInStock,\n      numReviews,\n      description\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/admin/productslist\",\n        className: \"btn btn-light mt-5 ml-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-arrow-left\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), \" Go back\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Edit Product Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), this.state.loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            width: \"320\",\n            src: `http://192.168.43.184/api/uploads/image - 1615302608565.png`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicEmail\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Enter product name\",\n              value: name,\n              onChange: e => this.setState({\n                name: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"price\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Enter Product Price\",\n              value: price,\n              onChange: e => this.setState({\n                price: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"category\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Enter category\",\n              value: category,\n              onChange: e => this.setState({\n                category: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"category\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Brand\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Enter category\",\n              value: brand,\n              onChange: e => this.setState({\n                brand: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"countInStock\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Count In Stock\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Enter stock limit\",\n              value: countInStock,\n              onChange: e => this.setState({\n                countInStock: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"description\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Enter description\",\n              value: description,\n              onChange: e => this.setState({\n                description: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"image\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \" Image \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Enter image url\",\n              value: image,\n              onChange: e => this.setState({\n                image: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.File, {\n              id: \"img-upload\",\n              label: \"Choose File\",\n              custom: true,\n              onChange: this.onFileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 17\n            }, this), this.state.uploading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 42\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }, this), false ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            onClick: this.submitHandler,\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    getLoginInfoData: state.userLogin,\n    getUserDetailsData: state.getUserDetails\n  };\n};\n\nexport default connect(mapStateToProps)(ProductEditScreen);","map":{"version":3,"sources":["/Users/shravanmeena/Desktop/ecommerce/frontend/src/screens/ProductEditScreen.js"],"names":["React","Component","Form","Button","Row","Col","Container","Link","FormContainer","getUserDetails","connect","Loader","axios","ProductEditScreen","constructor","submitHandler","e","setState","loading","name","price","image","brand","category","countInStock","numReviews","description","state","data","token","props","getLoginInfoData","userInfo","config","headers","Authorization","put","match","params","id","then","response","history","push","catch","error","console","log","onFileChange","event","uploading","formdata","FormData","append","target","files","method","url","res","imageUrl","err","componentDidMount","get","render","value","mapStateToProps","userLogin","getUserDetailsData"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Form, Button, Row, Col, Container } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport FormContainer from \"../component/FormContainer\";\nimport { getUserDetails } from \"../actions/userActions\";\nimport { connect } from \"react-redux\";\nimport Loader from \"../component/Loader\";\nimport axios from \"axios\";\n\nclass ProductEditScreen extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"\",\n      price: \"\",\n      image: \"\",\n      brand: \"\",\n      category: \"\",\n      countInStock: \"\",\n      numReviews: 0,\n      imageUrl: \"https://placeimg.com/320/320/animals\",\n\n      description: \"\",\n      loading: true,\n      uploading: false,\n    };\n  }\n\n  submitHandler = (e) => {\n    this.setState({\n      loading: true,\n    });\n    // e.preventDefault();\n    const {\n      name,\n      price,\n      image,\n      brand,\n      category,\n      countInStock,\n      numReviews,\n      description,\n    } = this.state;\n    const data = {\n      name,\n      price,\n      image,\n      brand,\n      category,\n      countInStock,\n      numReviews,\n      description,\n    };\n    const token = this.props.getLoginInfoData.userInfo.token;\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    };\n\n    axios\n      .put(\n        `http://localhost:5000/api/products/${this.props.match.params.id}`,\n        data,\n        config\n      )\n      .then((response) => {\n        this.props.history.push(`/admin/productslist`);\n        this.setState({\n          loading: false,\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n        this.setState({\n          loading: false,\n        });\n      });\n  };\n\n  componentDidMount() {\n    this.setState({\n      loading: true,\n    });\n    const token = this.props.getLoginInfoData.userInfo.token;\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    };\n\n    axios\n      .get(\n        `http://localhost:5000/api/products/${this.props.match.params.id}`,\n        config\n      )\n      .then((response) => {\n        console.log(response.data);\n        this.setState({\n          name: response.data.name,\n          price: response.data.price,\n          image: response.data.image,\n          brand: response.data.brand,\n          category: response.data.category,\n          countInStock: response.data.countInStock,\n          numReviews: response.data.numReviews,\n          description: response.data.description,\n          loading: false,\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n        this.setState({\n          loading: false,\n        });\n      });\n  }\n\n  onFileChange = (event) => {\n    this.setState({\n      uploading: true,\n    });\n    var formdata = new FormData();\n    formdata.append(\"image\", event.target.files[0]);\n    formdata.append(\"filetype\", \"IMG\");\n    axios({\n      method: \"post\",\n      url: `http://localhost:5000/api/upload`,\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n      },\n      data: formdata,\n    })\n      .then((res) => {\n        this.setState({\n          imageUrl: res.data,\n          uploading: false,\n        });\n      })\n      .catch((err) => {\n        this.setState({\n          uploading: false,\n        });\n        console.log(\"Error : \" + err);\n      });\n  };\n\n  render() {\n    const {\n      name,\n      price,\n      image,\n      brand,\n      category,\n      countInStock,\n      numReviews,\n      description,\n    } = this.state;\n    return (\n      <>\n        <Link to='/admin/productslist' className='btn btn-light mt-5 ml-5'>\n          <i className='fa fa-arrow-left'></i> Go back\n        </Link>\n\n        <FormContainer>\n          <h2>Edit Product Details</h2>\n          {this.state.loading ? (\n            <Loader />\n          ) : (\n            <Form>\n              <img\n                width='320'\n                src={`http://192.168.43.184/api/uploads/image - 1615302608565.png`}\n              />\n\n              <Form.Group controlId='formBasicEmail'>\n                <Form.Label>Name</Form.Label>\n                <Form.Control\n                  type='text'\n                  placeholder='Enter product name'\n                  value={name}\n                  onChange={(e) => this.setState({ name: e.target.value })}\n                />\n              </Form.Group>\n\n              <Form.Group controlId='price'>\n                <Form.Label>Price</Form.Label>\n                <Form.Control\n                  type='text'\n                  placeholder='Enter Product Price'\n                  value={price}\n                  onChange={(e) => this.setState({ price: e.target.value })}\n                />\n              </Form.Group>\n\n              <Form.Group controlId='category'>\n                <Form.Label>Category</Form.Label>\n                <Form.Control\n                  type='text'\n                  placeholder='Enter category'\n                  value={category}\n                  onChange={(e) => this.setState({ category: e.target.value })}\n                />\n              </Form.Group>\n\n              <Form.Group controlId='category'>\n                <Form.Label>Brand</Form.Label>\n                <Form.Control\n                  type='text'\n                  placeholder='Enter category'\n                  value={brand}\n                  onChange={(e) => this.setState({ brand: e.target.value })}\n                />\n              </Form.Group>\n\n              <Form.Group controlId='countInStock'>\n                <Form.Label>Count In Stock</Form.Label>\n                <Form.Control\n                  type='text'\n                  placeholder='Enter stock limit'\n                  value={countInStock}\n                  onChange={(e) =>\n                    this.setState({ countInStock: e.target.value })\n                  }\n                />\n              </Form.Group>\n\n              <Form.Group controlId='description'>\n                <Form.Label>Description</Form.Label>\n                <Form.Control\n                  type='text'\n                  placeholder='Enter description'\n                  value={description}\n                  onChange={(e) =>\n                    this.setState({ description: e.target.value })\n                  }\n                />\n              </Form.Group>\n\n              <Form.Group controlId='image'>\n                <Form.Label> Image </Form.Label>\n                <Form.Control\n                  type='text'\n                  placeholder='Enter image url'\n                  value={image}\n                  onChange={(e) => this.setState({ image: e.target.value })}\n                />\n                <Form.File\n                  id='img-upload'\n                  label='Choose File'\n                  custom\n                  onChange={this.onFileChange}\n                />\n\n                {this.state.uploading && <Loader />}\n              </Form.Group>\n\n              {/* <Form.Group controlId='isAdmin'>\n                <Form.Check\n                  type='Checkbox'\n                  label='Is Admin'\n                  checked={isAdmin}\n                  onChange={(e) => this.setState({ isAdmin: e.target.checked })}\n                />\n              </Form.Group> */}\n\n              {false ? (\n                <Loader />\n              ) : (\n                <Button\n                  variant='primary'\n                  type='submit'\n                  onClick={this.submitHandler}>\n                  Update\n                </Button>\n              )}\n            </Form>\n          )}\n        </FormContainer>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    getLoginInfoData: state.userLogin,\n    getUserDetailsData: state.getUserDetails,\n  };\n};\n\nexport default connect(mapStateToProps)(ProductEditScreen);\n"]},"metadata":{},"sourceType":"module"}