{"ast":null,"code":"import axios from \"axios\";\nimport store from \"../store\";\nimport { ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_DETAILS_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_LIST_FAIL, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_PAY_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS } from \"../constants/orderConstants\";\nexport const createOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST\n    });\n    const token = store.getState().userLogin.userInfo.token;\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`http://localhost:5000/api/orders`, order, config);\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"orders\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getOrderDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST\n    });\n    const token = store.getState().userLogin.userInfo.token;\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`http://localhost:5000/api/orders/${id}`, config);\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST\n    });\n    const token = store.getState().userLogin.userInfo.token;\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`http://localhost:5000/api/orders/${orderId}/pay`, paymentResult, config);\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listOrders = () => async dispatch => {\n  try {\n    dispatch({\n      type: ORDER_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"http://localhost:5000/api/orders\");\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/shravanmeena/Desktop/ecommerce/frontend/src/actions/orderActions.js"],"names":["axios","store","ORDER_CREATE_FAIL","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_DETAILS_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_LIST_FAIL","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","createOrder","order","dispatch","getState","type","token","userLogin","userInfo","config","headers","Authorization","data","post","payload","localStorage","setItem","JSON","stringify","error","response","message","getOrderDetails","id","get","payOrder","orderId","paymentResult","put","listOrders"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport store from \"../store\";\nimport {\n  ORDER_CREATE_FAIL,\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_DETAILS_FAIL,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_LIST_FAIL,\n  ORDER_LIST_REQUEST,\n  ORDER_LIST_SUCCESS,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_SUCCESS,\n} from \"../constants/orderConstants\";\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST,\n    });\n\n    const token = store.getState().userLogin.userInfo.token;\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    };\n\n    const { data } = await axios.post(\n      `http://localhost:5000/api/orders`,\n      order,\n      config\n    );\n\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data,\n    });\n\n    localStorage.setItem(\"orders\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST,\n    });\n\n    const token = store.getState().userLogin.userInfo.token;\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    };\n\n    const { data } = await axios.get(\n      `http://localhost:5000/api/orders/${id}`,\n      config\n    );\n\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const payOrder = (orderId, paymentResult) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST,\n    });\n\n    const token = store.getState().userLogin.userInfo.token;\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    };\n\n    const { data } = await axios.put(\n      `http://localhost:5000/api/orders/${orderId}/pay`,\n      paymentResult,\n      config\n    );\n\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const listOrders = () => async (dispatch) => {\n  try {\n    dispatch({ type: ORDER_LIST_REQUEST });\n    const { data } = await axios.get(\"http://localhost:5000/api/orders\");\n    dispatch({ type: ORDER_LIST_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}