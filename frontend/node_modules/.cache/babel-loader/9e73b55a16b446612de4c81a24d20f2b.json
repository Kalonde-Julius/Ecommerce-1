{"ast":null,"code":"var _jsxFileName = \"/Users/shravanmeena/Desktop/ecommerce/frontend/src/screens/ShipingAddress.js\";\nimport React, { Component } from \"react\";\nimport { Form, Button, Row, Col, Container } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport FormContainer from \"../component/FormContainer\";\nimport { saveShippingAddress } from \"../actions/cartActions\";\nimport { connect } from \"react-redux\";\nimport Loader from \"../component/Loader\";\nimport CheckoutSteps from \"../component/CheckoutSteps\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ShipingAddress extends Component {\n  constructor() {\n    super();\n\n    this.submitHandler = e => {\n      const {\n        address,\n        city,\n        postalCode,\n        country\n      } = this.state;\n      e.preventDefault();\n      this.props.dispatch(saveShippingAddress({\n        address,\n        city,\n        postalCode,\n        country\n      }));\n      this.props.history.push(\"/payment\");\n    };\n\n    this.state = {\n      address: \"\",\n      city: \"\",\n      postalCode: \"\",\n      country: \"\"\n    };\n  }\n\n  componentDidMount() {\n    const shippingAddress = this.props.getcartData.shippingAddress;\n\n    if (shippingAddress) {\n      this.setState({\n        address: shippingAddress.address,\n        city: shippingAddress.city,\n        postalCode: shippingAddress.postalCode,\n        country: shippingAddress.country\n      });\n    } else {\n      return;\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(CheckoutSteps, {\n        step1: true,\n        step2: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Shipping Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicEmail\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter address\",\n            value: this.state.address,\n            onChange: e => this.setState({\n              address: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter city\",\n            value: this.state.city,\n            onChange: e => this.setState({\n              city: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicEmail\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Postal Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter pincode\",\n            value: this.state.postalCode,\n            onChange: e => this.setState({\n              postalCode: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicEmail\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Country\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter country\",\n            value: this.state.country,\n            onChange: e => this.setState({\n              country: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          onClick: this.submitHandler,\n          children: \"Continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    getLoginInfoData: state.userLogin,\n    getcartData: state.cart\n  };\n};\n\nexport default connect(mapStateToProps)(ShipingAddress);","map":{"version":3,"sources":["/Users/shravanmeena/Desktop/ecommerce/frontend/src/screens/ShipingAddress.js"],"names":["React","Component","Form","Button","Row","Col","Container","Link","FormContainer","saveShippingAddress","connect","Loader","CheckoutSteps","ShipingAddress","constructor","submitHandler","e","address","city","postalCode","country","state","preventDefault","props","dispatch","history","push","componentDidMount","shippingAddress","getcartData","setState","render","target","value","mapStateToProps","getLoginInfoData","userLogin","cart"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Form, Button, Row, Col, Container } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport FormContainer from \"../component/FormContainer\";\nimport { saveShippingAddress } from \"../actions/cartActions\";\nimport { connect } from \"react-redux\";\nimport Loader from \"../component/Loader\";\nimport CheckoutSteps from \"../component/CheckoutSteps\";\n\nclass ShipingAddress extends Component {\n  constructor() {\n    super();\n    this.state = {\n      address: \"\",\n      city: \"\",\n      postalCode: \"\",\n      country: \"\",\n    };\n  }\n\n  submitHandler = (e) => {\n    const { address, city, postalCode, country } = this.state;\n    e.preventDefault();\n    this.props.dispatch(\n      saveShippingAddress({ address, city, postalCode, country })\n    );\n    this.props.history.push(\"/payment\");\n  };\n\n  componentDidMount() {\n    const shippingAddress = this.props.getcartData.shippingAddress;\n    if (shippingAddress) {\n      this.setState({\n        address: shippingAddress.address,\n        city: shippingAddress.city,\n        postalCode: shippingAddress.postalCode,\n        country: shippingAddress.country,\n      });\n    } else {\n      return;\n    }\n  }\n\n  render() {\n    return (\n      <FormContainer>\n        <CheckoutSteps step1 step2 />\n        <h2>Shipping Address</h2>\n        <Form>\n          <Form.Group controlId='formBasicEmail'>\n            <Form.Label>Address</Form.Label>\n            <Form.Control\n              type='text'\n              placeholder='Enter address'\n              value={this.state.address}\n              onChange={(e) => this.setState({ address: e.target.value })}\n            />\n          </Form.Group>\n\n          <Form.Group controlId='formBasicPassword'>\n            <Form.Label>City</Form.Label>\n            <Form.Control\n              type='text'\n              placeholder='Enter city'\n              value={this.state.city}\n              onChange={(e) => this.setState({ city: e.target.value })}\n            />\n          </Form.Group>\n\n          <Form.Group controlId='formBasicEmail'>\n            <Form.Label>Postal Code</Form.Label>\n            <Form.Control\n              type='text'\n              placeholder='Enter pincode'\n              value={this.state.postalCode}\n              onChange={(e) => this.setState({ postalCode: e.target.value })}\n            />\n          </Form.Group>\n\n          <Form.Group controlId='formBasicEmail'>\n            <Form.Label>Country</Form.Label>\n            <Form.Control\n              type='text'\n              placeholder='Enter country'\n              value={this.state.country}\n              onChange={(e) => this.setState({ country: e.target.value })}\n            />\n          </Form.Group>\n          <Button variant='primary' type='submit' onClick={this.submitHandler}>\n            Continue\n          </Button>\n        </Form>\n      </FormContainer>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    getLoginInfoData: state.userLogin,\n    getcartData: state.cart,\n  };\n};\n\nexport default connect(mapStateToProps)(ShipingAddress);\n"]},"metadata":{},"sourceType":"module"}