{"ast":null,"code":"import _classCallCheck from\"/Users/shravanmeena/Desktop/ecommerce/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/shravanmeena/Desktop/ecommerce/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/shravanmeena/Desktop/ecommerce/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/shravanmeena/Desktop/ecommerce/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import{Form,Button,Row,Col,Container}from\"react-bootstrap\";import{Link}from\"react-router-dom\";import FormContainer from\"../component/FormContainer\";import{saveShippingAddress}from\"../actions/cartActions\";import{connect}from\"react-redux\";import Loader from\"../component/Loader\";import CheckoutSteps from\"../component/CheckoutSteps\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ShipingAddress=/*#__PURE__*/function(_Component){_inherits(ShipingAddress,_Component);var _super=_createSuper(ShipingAddress);function ShipingAddress(){var _this;_classCallCheck(this,ShipingAddress);_this=_super.call(this);_this.submitHandler=function(e){var _this$state=_this.state,address=_this$state.address,city=_this$state.city,postalCode=_this$state.postalCode,country=_this$state.country;e.preventDefault();_this.props.dispatch(saveShippingAddress({address:address,city:city,postalCode:postalCode,country:country}));_this.props.history.push(\"/payment\");};_this.state={address:\"\",city:\"\",postalCode:\"\",country:\"\"};return _this;}_createClass(ShipingAddress,[{key:\"componentDidMount\",value:function componentDidMount(){var shippingAddress=this.props.getcartData.shippingAddress;if(shippingAddress){this.setState({address:shippingAddress.address,city:shippingAddress.city,postalCode:shippingAddress.postalCode,country:shippingAddress.country});}else{return;}}},{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/_jsxs(FormContainer,{children:[/*#__PURE__*/_jsx(CheckoutSteps,{step1:true,step2:true}),/*#__PURE__*/_jsx(\"h2\",{children:\"Shipping Address\"}),/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsxs(Form.Group,{controlId:\"formBasicEmail\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Address\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Enter address\",value:this.state.address,onChange:function onChange(e){return _this2.setState({address:e.target.value});}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"formBasicPassword\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"City\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Enter city\",value:this.state.city,onChange:function onChange(e){return _this2.setState({city:e.target.value});}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"formBasicEmail\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Postal Code\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Enter pincode\",value:this.state.postalCode,onChange:function onChange(e){return _this2.setState({postalCode:e.target.value});}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"formBasicEmail\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Country\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Enter country\",value:this.state.country,onChange:function onChange(e){return _this2.setState({country:e.target.value});}})]}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",type:\"submit\",onClick:this.submitHandler,children:\"Continue\"})]})]});}}]);return ShipingAddress;}(Component);var mapStateToProps=function mapStateToProps(state){return{getLoginInfoData:state.userLogin,getcartData:state.cart};};export default connect(mapStateToProps)(ShipingAddress);","map":{"version":3,"sources":["/Users/shravanmeena/Desktop/ecommerce/frontend/src/screens/ShipingAddress.js"],"names":["React","Component","Form","Button","Row","Col","Container","Link","FormContainer","saveShippingAddress","connect","Loader","CheckoutSteps","ShipingAddress","submitHandler","e","state","address","city","postalCode","country","preventDefault","props","dispatch","history","push","shippingAddress","getcartData","setState","target","value","mapStateToProps","getLoginInfoData","userLogin","cart"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Form, Button, Row, Col, Container } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport FormContainer from \"../component/FormContainer\";\nimport { saveShippingAddress } from \"../actions/cartActions\";\nimport { connect } from \"react-redux\";\nimport Loader from \"../component/Loader\";\nimport CheckoutSteps from \"../component/CheckoutSteps\";\n\nclass ShipingAddress extends Component {\n  constructor() {\n    super();\n    this.state = {\n      address: \"\",\n      city: \"\",\n      postalCode: \"\",\n      country: \"\",\n    };\n  }\n\n  submitHandler = (e) => {\n    const { address, city, postalCode, country } = this.state;\n    e.preventDefault();\n    this.props.dispatch(\n      saveShippingAddress({ address, city, postalCode, country })\n    );\n    this.props.history.push(\"/payment\");\n  };\n\n  componentDidMount() {\n    const shippingAddress = this.props.getcartData.shippingAddress;\n    if (shippingAddress) {\n      this.setState({\n        address: shippingAddress.address,\n        city: shippingAddress.city,\n        postalCode: shippingAddress.postalCode,\n        country: shippingAddress.country,\n      });\n    } else {\n      return;\n    }\n  }\n\n  render() {\n    return (\n      <FormContainer>\n        <CheckoutSteps step1 step2 />\n        <h2>Shipping Address</h2>\n        <Form>\n          <Form.Group controlId='formBasicEmail'>\n            <Form.Label>Address</Form.Label>\n            <Form.Control\n              type='text'\n              placeholder='Enter address'\n              value={this.state.address}\n              onChange={(e) => this.setState({ address: e.target.value })}\n            />\n          </Form.Group>\n\n          <Form.Group controlId='formBasicPassword'>\n            <Form.Label>City</Form.Label>\n            <Form.Control\n              type='text'\n              placeholder='Enter city'\n              value={this.state.city}\n              onChange={(e) => this.setState({ city: e.target.value })}\n            />\n          </Form.Group>\n\n          <Form.Group controlId='formBasicEmail'>\n            <Form.Label>Postal Code</Form.Label>\n            <Form.Control\n              type='text'\n              placeholder='Enter pincode'\n              value={this.state.postalCode}\n              onChange={(e) => this.setState({ postalCode: e.target.value })}\n            />\n          </Form.Group>\n\n          <Form.Group controlId='formBasicEmail'>\n            <Form.Label>Country</Form.Label>\n            <Form.Control\n              type='text'\n              placeholder='Enter country'\n              value={this.state.country}\n              onChange={(e) => this.setState({ country: e.target.value })}\n            />\n          </Form.Group>\n          <Button variant='primary' type='submit' onClick={this.submitHandler}>\n            Continue\n          </Button>\n        </Form>\n      </FormContainer>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    getLoginInfoData: state.userLogin,\n    getcartData: state.cart,\n  };\n};\n\nexport default connect(mapStateToProps)(ShipingAddress);\n"]},"metadata":{},"sourceType":"module"}