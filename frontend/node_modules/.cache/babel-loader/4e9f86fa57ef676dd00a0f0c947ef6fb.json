{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productReviewCreateReducer } from \"./reducers/productReducers.js\";\nimport { cartReducer } from \"./reducers/cartReducers.js\";\nimport { createOrderReducer, getOrderReducer, orderPayReducer, orderListReducer, orderDeliverReducer } from \"./reducers/orderReducers.js\";\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userProfileUpdateReducer, userListReducer, userDeleteReducer } from \"./reducers/userReducers.js\";\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productCreateReview: productReviewCreateReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdate: userProfileUpdateReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  createOrder: createOrderReducer,\n  orderDetails: getOrderReducer,\n  orderPay: orderPayReducer,\n  orderList: orderListReducer,\n  orderDelivered: orderDeliverReducer\n});\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : [];\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null;\nconst saveShippingAddressFromStorage = localStorage.getItem(\"shippingAddress\") ? JSON.parse(localStorage.getItem(\"shippingAddress\")) : {};\nconst savePaymentAddressFromStorage = localStorage.getItem(\"paymentAddress\") ? JSON.parse(localStorage.getItem(\"paymentAddress\")) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: saveShippingAddressFromStorage,\n    paymentAddress: savePaymentAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/Users/shravanmeena/Desktop/ecommerce/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","productDeleteReducer","productCreateReducer","productReviewCreateReducer","cartReducer","createOrderReducer","getOrderReducer","orderPayReducer","orderListReducer","orderDeliverReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userProfileUpdateReducer","userListReducer","userDeleteReducer","reducer","productList","productDetails","productDelete","productCreate","productCreateReview","cart","userLogin","userRegister","userDetails","userUpdate","userList","userDelete","createOrder","orderDetails","orderPay","orderList","orderDelivered","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","saveShippingAddressFromStorage","savePaymentAddressFromStorage","initialState","cartItems","shippingAddress","paymentAddress","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SACEC,kBADF,EAEEC,qBAFF,EAGEC,oBAHF,EAIEC,oBAJF,EAKEC,0BALF,QAMO,+BANP;AAOA,SAASC,WAAT,QAA4B,4BAA5B;AACA,SACEC,kBADF,EAEEC,eAFF,EAGEC,eAHF,EAIEC,gBAJF,EAKEC,mBALF,QAMO,6BANP;AAOA,SACEC,gBADF,EAEEC,mBAFF,EAGEC,kBAHF,EAIEC,wBAJF,EAKEC,eALF,EAMEC,iBANF,QAOO,4BAPP;AASA,MAAMC,OAAO,GAAGrB,eAAe,CAAC;AAC9BsB,EAAAA,WAAW,EAAElB,kBADiB;AAE9BmB,EAAAA,cAAc,EAAElB,qBAFc;AAG9BmB,EAAAA,aAAa,EAAElB,oBAHe;AAI9BmB,EAAAA,aAAa,EAAElB,oBAJe;AAK9BmB,EAAAA,mBAAmB,EAAElB,0BALS;AAO9BmB,EAAAA,IAAI,EAAElB,WAPwB;AAS9BmB,EAAAA,SAAS,EAAEb,gBATmB;AAU9Bc,EAAAA,YAAY,EAAEb,mBAVgB;AAW9Bc,EAAAA,WAAW,EAAEb,kBAXiB;AAY9Bc,EAAAA,UAAU,EAAEb,wBAZkB;AAa9Bc,EAAAA,QAAQ,EAAEb,eAboB;AAc9Bc,EAAAA,UAAU,EAAEb,iBAdkB;AAgB9Bc,EAAAA,WAAW,EAAExB,kBAhBiB;AAiB9ByB,EAAAA,YAAY,EAAExB,eAjBgB;AAkB9ByB,EAAAA,QAAQ,EAAExB,eAlBoB;AAmB9ByB,EAAAA,SAAS,EAAExB,gBAnBmB;AAoB9ByB,EAAAA,cAAc,EAAExB;AApBc,CAAD,CAA/B;AAuBA,MAAMyB,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACzBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADyB,GAEzB,EAFJ;AAIA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,GAExB,IAFJ;AAIA,MAAMI,8BAA8B,GAAGL,YAAY,CAACC,OAAb,CAAqB,iBAArB,IACnCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CADmC,GAEnC,EAFJ;AAIA,MAAMK,6BAA6B,GAAGN,YAAY,CAACC,OAAb,CAAqB,gBAArB,IAClCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAAX,CADkC,GAElC,EAFJ;AAIA,MAAMM,YAAY,GAAG;AACnBpB,EAAAA,IAAI,EAAE;AACJqB,IAAAA,SAAS,EAAET,oBADP;AAEJU,IAAAA,eAAe,EAAEJ,8BAFb;AAGJK,IAAAA,cAAc,EAAEJ;AAHZ,GADa;AAMnBlB,EAAAA,SAAS,EAAE;AAAEuB,IAAAA,QAAQ,EAAEP;AAAZ;AANQ,CAArB;AASA,MAAMQ,UAAU,GAAG,CAAClD,KAAD,CAAnB;AAEA,MAAMmD,KAAK,GAAGtD,WAAW,CACvBsB,OADuB,EAEvB0B,YAFuB,EAGvB5C,mBAAmB,CAACF,eAAe,CAAC,GAAGmD,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport {\n  productListReducer,\n  productDetailsReducer,\n  productDeleteReducer,\n  productCreateReducer,\n  productReviewCreateReducer,\n} from \"./reducers/productReducers.js\";\nimport { cartReducer } from \"./reducers/cartReducers.js\";\nimport {\n  createOrderReducer,\n  getOrderReducer,\n  orderPayReducer,\n  orderListReducer,\n  orderDeliverReducer,\n} from \"./reducers/orderReducers.js\";\nimport {\n  userLoginReducer,\n  userRegisterReducer,\n  userDetailsReducer,\n  userProfileUpdateReducer,\n  userListReducer,\n  userDeleteReducer,\n} from \"./reducers/userReducers.js\";\n\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productCreateReview: productReviewCreateReducer,\n\n  cart: cartReducer,\n\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdate: userProfileUpdateReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n\n  createOrder: createOrderReducer,\n  orderDetails: getOrderReducer,\n  orderPay: orderPayReducer,\n  orderList: orderListReducer,\n  orderDelivered: orderDeliverReducer,\n});\n\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\")\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\n  : [];\n\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\n  : null;\n\nconst saveShippingAddressFromStorage = localStorage.getItem(\"shippingAddress\")\n  ? JSON.parse(localStorage.getItem(\"shippingAddress\"))\n  : {};\n\nconst savePaymentAddressFromStorage = localStorage.getItem(\"paymentAddress\")\n  ? JSON.parse(localStorage.getItem(\"paymentAddress\"))\n  : {};\n\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: saveShippingAddressFromStorage,\n    paymentAddress: savePaymentAddressFromStorage,\n  },\n  userLogin: { userInfo: userInfoFromStorage },\n};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}