{"ast":null,"code":"var _jsxFileName = \"/Users/shravanmeena/Desktop/ecommerce/frontend/src/screens/ProductEditScreen.js\";\nimport React, { Component } from \"react\";\nimport { Form, Button, Row, Col, Container } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport FormContainer from \"../component/FormContainer\";\nimport { getUserDetails } from \"../actions/userActions\";\nimport { connect } from \"react-redux\";\nimport Loader from \"../component/Loader\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ProductEditScreen extends Component {\n  constructor() {\n    super();\n\n    this.onFileChange = event => {\n      // Update the state\n      this.setState({\n        selectedFile: event.target.files[0]\n      });\n    };\n\n    this.onFileUpload = event => {\n      this.setState({\n        selectedFile: event.target.files[0]\n      }); // Create an object of formData\n\n      const formData = new FormData(); // Update the formData object\n\n      formData.append(\"image\", this.state.selectedFile, this.state.selectedFile.name); // Details of the uploaded file\n\n      console.log(this.state.selectedFile); // Request made to the backend api\n      // Send formData object\n\n      const {\n        data\n      } = axios.post(\"http://localhost:5000/api/uploads\", formData);\n      console.log(\"====================================\");\n      console.log(\"dyaoioADAL\" + data);\n      console.log(\"====================================\");\n    };\n\n    this.submitHandler = e => {\n      this.setState({\n        loading: true\n      }); // e.preventDefault();\n\n      const {\n        name,\n        price,\n        image,\n        brand,\n        category,\n        countInStock,\n        numReviews,\n        description\n      } = this.state;\n      const data = {\n        name,\n        price,\n        image,\n        brand,\n        category,\n        countInStock,\n        numReviews,\n        description\n      };\n      const token = this.props.getLoginInfoData.userInfo.token;\n      const config = {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      };\n      axios.put(`http://localhost:5000/api/products/${this.props.match.params.id}`, data, config).then(response => {\n        this.props.history.push(`/admin/productslist`);\n        this.setState({\n          loading: false\n        });\n      }).catch(error => {\n        console.log(error);\n        this.setState({\n          loading: false\n        });\n      });\n    };\n\n    this.handleUploadFile = event => {\n      const data = new FormData();\n      data.append(\"image\", event.target.files[0]);\n      axios.post(\"http://localhost:5000/api/uploads\", data).then(response => {\n        this.setState({\n          imageUrl: response.data.fileUrl\n        });\n      });\n    };\n\n    this.state = {\n      name: \"\",\n      price: \"\",\n      image: \"\",\n      brand: \"\",\n      category: \"\",\n      countInStock: \"\",\n      numReviews: 0,\n      imageUrl: \"https://placeimg.com/320/320/animals\",\n      description: \"\",\n      loading: true,\n      uploading: false,\n      selectedFile: null\n    };\n  } // On file select (from the pop up)\n\n\n  componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    const token = this.props.getLoginInfoData.userInfo.token;\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    axios.get(`http://localhost:5000/api/products/${this.props.match.params.id}`, config).then(response => {\n      console.log(response.data);\n      this.setState({\n        name: response.data.name,\n        price: response.data.price,\n        image: response.data.image,\n        brand: response.data.brand,\n        category: response.data.category,\n        countInStock: response.data.countInStock,\n        numReviews: response.data.numReviews,\n        description: response.data.description,\n        loading: false\n      });\n    }).catch(error => {\n      console.log(error);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  // fileUploadHandler = async (e) => {\n  //   const file = e.target.files[0];\n  //   const formData = new FormData();\n  //   formData.append(\"image\", file);\n  //   this.setState({\n  //     uploading: true,\n  //   });\n  //   try {\n  //     const config = {\n  //       headers: {\n  //         \"Content-Type\": \"multipart/form-data\",\n  //       },\n  //     };\n  //     await axios\n  //       .post(`http://localhost:5000/api/uploads`, formData, config)\n  //       .then((response) => {\n  //         console.log(\"====================================\");\n  //         console.log(response.data);\n  //         console.log(\"====================================\");\n  //         this.setState({\n  //           uploading: false,\n  //         });\n  //       })\n  //       .catch((err) => {\n  //         console.log(err.response.message);\n  //         this.setState({\n  //           loading: false,\n  //         });\n  //       });\n  //     this.setState({\n  //       uploading: false,\n  //     });\n  //   } catch (error) {\n  //     this.setState({\n  //       uploading: false,\n  //     });\n  //   }\n  // };\n  render() {\n    const {\n      name,\n      price,\n      image,\n      brand,\n      category,\n      countInStock,\n      numReviews,\n      description\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/admin/productslist\",\n        className: \"btn btn-light mt-5 ml-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-arrow-left\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), \" Go back\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Edit Product Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), this.state.loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            width: \"320\",\n            src: this.state.imageUrl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: this.handleUploadFile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicEmail\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Enter product name\",\n              value: name,\n              onChange: e => this.setState({\n                name: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"price\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Enter Product Price\",\n              value: price,\n              onChange: e => this.setState({\n                price: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"category\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Enter category\",\n              value: category,\n              onChange: e => this.setState({\n                category: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"category\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Brand\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Enter category\",\n              value: brand,\n              onChange: e => this.setState({\n                brand: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"countInStock\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Count In Stock\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Enter stock limit\",\n              value: countInStock,\n              onChange: e => this.setState({\n                countInStock: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"description\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Enter description\",\n              value: description,\n              onChange: e => this.setState({\n                description: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"image\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \" Image \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Enter image url\",\n              value: image,\n              onChange: e => this.setState({\n                image: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.File, {\n              id: \"img-upload\",\n              label: \"Choose File\",\n              custom: true,\n              onChange: this.onFileUpload\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 17\n            }, this), this.state.uploading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 42\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 15\n          }, this), false ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            onClick: this.submitHandler,\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    getLoginInfoData: state.userLogin,\n    getUserDetailsData: state.getUserDetails\n  };\n};\n\nexport default connect(mapStateToProps)(ProductEditScreen);","map":{"version":3,"sources":["/Users/shravanmeena/Desktop/ecommerce/frontend/src/screens/ProductEditScreen.js"],"names":["React","Component","Form","Button","Row","Col","Container","Link","FormContainer","getUserDetails","connect","Loader","axios","ProductEditScreen","constructor","onFileChange","event","setState","selectedFile","target","files","onFileUpload","formData","FormData","append","state","name","console","log","data","post","submitHandler","e","loading","price","image","brand","category","countInStock","numReviews","description","token","props","getLoginInfoData","userInfo","config","headers","Authorization","put","match","params","id","then","response","history","push","catch","error","handleUploadFile","imageUrl","fileUrl","uploading","componentDidMount","get","render","value","mapStateToProps","userLogin","getUserDetailsData"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Form, Button, Row, Col, Container } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport FormContainer from \"../component/FormContainer\";\nimport { getUserDetails } from \"../actions/userActions\";\nimport { connect } from \"react-redux\";\nimport Loader from \"../component/Loader\";\nimport axios from \"axios\";\n\nclass ProductEditScreen extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"\",\n      price: \"\",\n      image: \"\",\n      brand: \"\",\n      category: \"\",\n      countInStock: \"\",\n      numReviews: 0,\n      imageUrl: \"https://placeimg.com/320/320/animals\",\n\n      description: \"\",\n      loading: true,\n      uploading: false,\n      selectedFile: null,\n    };\n  }\n\n  // On file select (from the pop up)\n  onFileChange = (event) => {\n    // Update the state\n    this.setState({ selectedFile: event.target.files[0] });\n  };\n\n  // On file upload (click the upload button)\n  onFileUpload = (event) => {\n    this.setState({ selectedFile: event.target.files[0] });\n\n    // Create an object of formData\n    const formData = new FormData();\n\n    // Update the formData object\n    formData.append(\n      \"image\",\n      this.state.selectedFile,\n      this.state.selectedFile.name\n    );\n\n    // Details of the uploaded file\n    console.log(this.state.selectedFile);\n\n    // Request made to the backend api\n    // Send formData object\n    const { data } = axios.post(\"http://localhost:5000/api/uploads\", formData);\n\n    console.log(\"====================================\");\n    console.log(\"dyaoioADAL\" + data);\n    console.log(\"====================================\");\n  };\n\n  submitHandler = (e) => {\n    this.setState({\n      loading: true,\n    });\n    // e.preventDefault();\n    const {\n      name,\n      price,\n      image,\n      brand,\n      category,\n      countInStock,\n      numReviews,\n      description,\n    } = this.state;\n    const data = {\n      name,\n      price,\n      image,\n      brand,\n      category,\n      countInStock,\n      numReviews,\n      description,\n    };\n    const token = this.props.getLoginInfoData.userInfo.token;\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    };\n\n    axios\n      .put(\n        `http://localhost:5000/api/products/${this.props.match.params.id}`,\n        data,\n        config\n      )\n      .then((response) => {\n        this.props.history.push(`/admin/productslist`);\n        this.setState({\n          loading: false,\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n        this.setState({\n          loading: false,\n        });\n      });\n  };\n\n  componentDidMount() {\n    this.setState({\n      loading: true,\n    });\n    const token = this.props.getLoginInfoData.userInfo.token;\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    };\n\n    axios\n      .get(\n        `http://localhost:5000/api/products/${this.props.match.params.id}`,\n        config\n      )\n      .then((response) => {\n        console.log(response.data);\n        this.setState({\n          name: response.data.name,\n          price: response.data.price,\n          image: response.data.image,\n          brand: response.data.brand,\n          category: response.data.category,\n          countInStock: response.data.countInStock,\n          numReviews: response.data.numReviews,\n          description: response.data.description,\n          loading: false,\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n        this.setState({\n          loading: false,\n        });\n      });\n  }\n\n  handleUploadFile = (event) => {\n    const data = new FormData();\n    data.append(\"image\", event.target.files[0]);\n    axios.post(\"http://localhost:5000/api/uploads\", data).then((response) => {\n      this.setState({\n        imageUrl: response.data.fileUrl,\n      });\n    });\n  };\n\n  // fileUploadHandler = async (e) => {\n  //   const file = e.target.files[0];\n  //   const formData = new FormData();\n  //   formData.append(\"image\", file);\n  //   this.setState({\n  //     uploading: true,\n  //   });\n  //   try {\n  //     const config = {\n  //       headers: {\n  //         \"Content-Type\": \"multipart/form-data\",\n  //       },\n  //     };\n\n  //     await axios\n  //       .post(`http://localhost:5000/api/uploads`, formData, config)\n  //       .then((response) => {\n  //         console.log(\"====================================\");\n  //         console.log(response.data);\n  //         console.log(\"====================================\");\n  //         this.setState({\n  //           uploading: false,\n  //         });\n  //       })\n  //       .catch((err) => {\n  //         console.log(err.response.message);\n  //         this.setState({\n  //           loading: false,\n  //         });\n  //       });\n\n  //     this.setState({\n  //       uploading: false,\n  //     });\n  //   } catch (error) {\n  //     this.setState({\n  //       uploading: false,\n  //     });\n  //   }\n  // };\n\n  render() {\n    const {\n      name,\n      price,\n      image,\n      brand,\n      category,\n      countInStock,\n      numReviews,\n      description,\n    } = this.state;\n    return (\n      <>\n        <Link to='/admin/productslist' className='btn btn-light mt-5 ml-5'>\n          <i className='fa fa-arrow-left'></i> Go back\n        </Link>\n\n        <FormContainer>\n          <h2>Edit Product Details</h2>\n          {this.state.loading ? (\n            <Loader />\n          ) : (\n            <Form>\n              <img width='320' src={this.state.imageUrl} />\n\n              <input type='file' onChange={this.handleUploadFile} />\n\n              <Form.Group controlId='formBasicEmail'>\n                <Form.Label>Name</Form.Label>\n                <Form.Control\n                  type='text'\n                  placeholder='Enter product name'\n                  value={name}\n                  onChange={(e) => this.setState({ name: e.target.value })}\n                />\n              </Form.Group>\n\n              <Form.Group controlId='price'>\n                <Form.Label>Price</Form.Label>\n                <Form.Control\n                  type='text'\n                  placeholder='Enter Product Price'\n                  value={price}\n                  onChange={(e) => this.setState({ price: e.target.value })}\n                />\n              </Form.Group>\n\n              <Form.Group controlId='category'>\n                <Form.Label>Category</Form.Label>\n                <Form.Control\n                  type='text'\n                  placeholder='Enter category'\n                  value={category}\n                  onChange={(e) => this.setState({ category: e.target.value })}\n                />\n              </Form.Group>\n\n              <Form.Group controlId='category'>\n                <Form.Label>Brand</Form.Label>\n                <Form.Control\n                  type='text'\n                  placeholder='Enter category'\n                  value={brand}\n                  onChange={(e) => this.setState({ brand: e.target.value })}\n                />\n              </Form.Group>\n\n              <Form.Group controlId='countInStock'>\n                <Form.Label>Count In Stock</Form.Label>\n                <Form.Control\n                  type='text'\n                  placeholder='Enter stock limit'\n                  value={countInStock}\n                  onChange={(e) =>\n                    this.setState({ countInStock: e.target.value })\n                  }\n                />\n              </Form.Group>\n\n              <Form.Group controlId='description'>\n                <Form.Label>Description</Form.Label>\n                <Form.Control\n                  type='text'\n                  placeholder='Enter description'\n                  value={description}\n                  onChange={(e) =>\n                    this.setState({ description: e.target.value })\n                  }\n                />\n              </Form.Group>\n\n              <Form.Group controlId='image'>\n                <Form.Label> Image </Form.Label>\n                <Form.Control\n                  type='text'\n                  placeholder='Enter image url'\n                  value={image}\n                  onChange={(e) => this.setState({ image: e.target.value })}\n                />\n                <Form.File\n                  id='img-upload'\n                  label='Choose File'\n                  custom\n                  onChange={this.onFileUpload}\n                />\n\n                {this.state.uploading && <Loader />}\n              </Form.Group>\n\n              {/* <Form.Group controlId='isAdmin'>\n                <Form.Check\n                  type='Checkbox'\n                  label='Is Admin'\n                  checked={isAdmin}\n                  onChange={(e) => this.setState({ isAdmin: e.target.checked })}\n                />\n              </Form.Group> */}\n\n              {false ? (\n                <Loader />\n              ) : (\n                <Button\n                  variant='primary'\n                  type='submit'\n                  onClick={this.submitHandler}>\n                  Update\n                </Button>\n              )}\n            </Form>\n          )}\n        </FormContainer>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    getLoginInfoData: state.userLogin,\n    getUserDetailsData: state.getUserDetails,\n  };\n};\n\nexport default connect(mapStateToProps)(ProductEditScreen);\n"]},"metadata":{},"sourceType":"module"}