[{"/Users/shravanmeena/Desktop/ecommerce/frontend/src/index.js":"1","/Users/shravanmeena/Desktop/ecommerce/frontend/src/store.js":"2","/Users/shravanmeena/Desktop/ecommerce/frontend/src/reportWebVitals.js":"3","/Users/shravanmeena/Desktop/ecommerce/frontend/src/App.js":"4","/Users/shravanmeena/Desktop/ecommerce/frontend/src/reducers/productReducers.js":"5","/Users/shravanmeena/Desktop/ecommerce/frontend/src/reducers/cartReducers.js":"6","/Users/shravanmeena/Desktop/ecommerce/frontend/src/reducers/userReducers.js":"7","/Users/shravanmeena/Desktop/ecommerce/frontend/src/reducers/orderReducers.js":"8","/Users/shravanmeena/Desktop/ecommerce/frontend/src/constants/productConstants.js":"9","/Users/shravanmeena/Desktop/ecommerce/frontend/src/constants/userConstants.js":"10","/Users/shravanmeena/Desktop/ecommerce/frontend/src/screens/PlaceOrder.js":"11","/Users/shravanmeena/Desktop/ecommerce/frontend/src/screens/Register.js":"12","/Users/shravanmeena/Desktop/ecommerce/frontend/src/screens/Cart.js":"13","/Users/shravanmeena/Desktop/ecommerce/frontend/src/screens/UserEditScreen.js":"14","/Users/shravanmeena/Desktop/ecommerce/frontend/src/screens/UserListScreen.js":"15","/Users/shravanmeena/Desktop/ecommerce/frontend/src/screens/PaymentAddress.js":"16","/Users/shravanmeena/Desktop/ecommerce/frontend/src/screens/ProductListScreen.js":"17","/Users/shravanmeena/Desktop/ecommerce/frontend/src/screens/ProductEditScreen.js":"18","/Users/shravanmeena/Desktop/ecommerce/frontend/src/screens/ProfileScreen.js":"19","/Users/shravanmeena/Desktop/ecommerce/frontend/src/screens/OrderScreen.js":"20","/Users/shravanmeena/Desktop/ecommerce/frontend/src/screens/Home.js":"21","/Users/shravanmeena/Desktop/ecommerce/frontend/src/component/ProductDetails.js":"22","/Users/shravanmeena/Desktop/ecommerce/frontend/src/screens/SignScreen.js":"23","/Users/shravanmeena/Desktop/ecommerce/frontend/src/component/Header.js":"24","/Users/shravanmeena/Desktop/ecommerce/frontend/src/screens/ShipingAddress.js":"25","/Users/shravanmeena/Desktop/ecommerce/frontend/src/component/Footer.js":"26","/Users/shravanmeena/Desktop/ecommerce/frontend/src/constants/cartConstant.js":"27","/Users/shravanmeena/Desktop/ecommerce/frontend/src/constants/orderConstants.js":"28","/Users/shravanmeena/Desktop/ecommerce/frontend/src/actions/userActions.js":"29","/Users/shravanmeena/Desktop/ecommerce/frontend/src/component/CheckoutSteps.js":"30","/Users/shravanmeena/Desktop/ecommerce/frontend/src/component/Loader.js":"31","/Users/shravanmeena/Desktop/ecommerce/frontend/src/component/Message.js":"32","/Users/shravanmeena/Desktop/ecommerce/frontend/src/component/FormContainer.js":"33","/Users/shravanmeena/Desktop/ecommerce/frontend/src/component/Product.js":"34","/Users/shravanmeena/Desktop/ecommerce/frontend/src/actions/orderActions.js":"35","/Users/shravanmeena/Desktop/ecommerce/frontend/src/actions/productActions.js":"36","/Users/shravanmeena/Desktop/ecommerce/frontend/src/actions/cartActions.js":"37","/Users/shravanmeena/Desktop/ecommerce/frontend/src/Products.js":"38","/Users/shravanmeena/Desktop/ecommerce/frontend/src/screens/OrderListScreen.js":"39","/Users/shravanmeena/Desktop/ecommerce/frontend/src/component/Rating.js":"40","/Users/shravanmeena/Desktop/ecommerce/frontend/src/component/SearchBox.js":"41","/Users/shravanmeena/Desktop/ecommerce/frontend/src/component/Paginate.js":"42","/Users/shravanmeena/Desktop/ecommerce/frontend/src/component/ProductCarousel.js":"43","/Users/shravanmeena/Desktop/ecommerce/frontend/src/component/Meta.js":"44","/Users/shravanmeena/Desktop/ecommerce/frontend/src/component/common/Error.js":"45","/Users/shravanmeena/Desktop/ecommerce/frontend/src/component/PopularProducts.js":"46"},{"size":600,"mtime":1613824536287,"results":"47","hashOfConfig":"48"},{"size":2292,"mtime":1615956849309,"results":"49","hashOfConfig":"48"},{"size":362,"mtime":1613751048878,"results":"50","hashOfConfig":"48"},{"size":2590,"mtime":1615986087438,"results":"51","hashOfConfig":"48"},{"size":2646,"mtime":1615968963890,"results":"52","hashOfConfig":"48"},{"size":1140,"mtime":1614252088857,"results":"53","hashOfConfig":"48"},{"size":2777,"mtime":1615133780735,"results":"54","hashOfConfig":"48"},{"size":2595,"mtime":1615310189974,"results":"55","hashOfConfig":"48"},{"size":1291,"mtime":1615956681542,"results":"56","hashOfConfig":"48"},{"size":1103,"mtime":1615133250714,"results":"57","hashOfConfig":"48"},{"size":5848,"mtime":1615981617458,"results":"58","hashOfConfig":"48"},{"size":3258,"mtime":1615999395751,"results":"59","hashOfConfig":"48"},{"size":4432,"mtime":1614233941425,"results":"60","hashOfConfig":"48"},{"size":4219,"mtime":1615985462703,"results":"61","hashOfConfig":"48"},{"size":3086,"mtime":1616007505686,"results":"62","hashOfConfig":"48"},{"size":2186,"mtime":1614249652200,"results":"63","hashOfConfig":"48"},{"size":3810,"mtime":1616007542534,"results":"64","hashOfConfig":"48"},{"size":7645,"mtime":1615985180313,"results":"65","hashOfConfig":"48"},{"size":6044,"mtime":1615985185540,"results":"66","hashOfConfig":"48"},{"size":7510,"mtime":1615985599905,"results":"67","hashOfConfig":"48"},{"size":4677,"mtime":1616007696584,"results":"68","hashOfConfig":"48"},{"size":8347,"mtime":1616006378718,"results":"69","hashOfConfig":"48"},{"size":2837,"mtime":1615999272039,"results":"70","hashOfConfig":"48"},{"size":2938,"mtime":1616007376951,"results":"71","hashOfConfig":"48"},{"size":3074,"mtime":1614236479550,"results":"72","hashOfConfig":"48"},{"size":384,"mtime":1616003813268,"results":"73","hashOfConfig":"48"},{"size":241,"mtime":1614232396760,"results":"74","hashOfConfig":"48"},{"size":1032,"mtime":1615309538360,"results":"75","hashOfConfig":"48"},{"size":4983,"mtime":1615985061205,"results":"76","hashOfConfig":"48"},{"size":1378,"mtime":1614236417291,"results":"77","hashOfConfig":"48"},{"size":369,"mtime":1613833423443,"results":"78","hashOfConfig":"48"},{"size":312,"mtime":1613850306247,"results":"79","hashOfConfig":"48"},{"size":395,"mtime":1613914349342,"results":"80","hashOfConfig":"48"},{"size":2676,"mtime":1615969830502,"results":"81","hashOfConfig":"48"},{"size":3988,"mtime":1615985097217,"results":"82","hashOfConfig":"48"},{"size":4131,"mtime":1615985110164,"results":"83","hashOfConfig":"48"},{"size":1245,"mtime":1615985076823,"results":"84","hashOfConfig":"48"},{"size":2655,"mtime":1613760657885,"results":"85","hashOfConfig":"48"},{"size":3740,"mtime":1616007545619,"results":"86","hashOfConfig":"48"},{"size":1839,"mtime":1615955282302,"results":"87","hashOfConfig":"48"},{"size":1106,"mtime":1616003654631,"results":"88","hashOfConfig":"48"},{"size":719,"mtime":1615978846498,"results":"89","hashOfConfig":"48"},{"size":1898,"mtime":1616004752739,"results":"90","hashOfConfig":"48"},{"size":608,"mtime":1615984027134,"results":"91","hashOfConfig":"48"},{"size":456,"mtime":1615998526715,"results":"92","hashOfConfig":"48"},{"size":2422,"mtime":1616006526199,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"npvbmf",{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"96"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"96"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"96"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"96"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"96"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"96"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"96"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"96"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"96"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"96"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"96"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"96"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"96"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"96"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"96"},"/Users/shravanmeena/Desktop/ecommerce/frontend/src/index.js",[],["203","204"],"/Users/shravanmeena/Desktop/ecommerce/frontend/src/store.js",[],"/Users/shravanmeena/Desktop/ecommerce/frontend/src/reportWebVitals.js",[],"/Users/shravanmeena/Desktop/ecommerce/frontend/src/App.js",[],"/Users/shravanmeena/Desktop/ecommerce/frontend/src/reducers/productReducers.js",[],"/Users/shravanmeena/Desktop/ecommerce/frontend/src/reducers/cartReducers.js",[],"/Users/shravanmeena/Desktop/ecommerce/frontend/src/reducers/userReducers.js",[],"/Users/shravanmeena/Desktop/ecommerce/frontend/src/reducers/orderReducers.js",[],"/Users/shravanmeena/Desktop/ecommerce/frontend/src/constants/productConstants.js",[],"/Users/shravanmeena/Desktop/ecommerce/frontend/src/constants/userConstants.js",[],"/Users/shravanmeena/Desktop/ecommerce/frontend/src/screens/PlaceOrder.js",["205"],"import React, { Component } from \"react\";\nimport { createOrder } from \"../actions/orderActions\";\nimport { connect } from \"react-redux\";\nimport CheckoutSteps from \"../component/CheckoutSteps\";\nimport {\n  Col,\n  Container,\n  ListGroup,\n  Row,\n  Image,\n  Card,\n  Button,\n} from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Loader from \"../component/Loader\";\n\nclass PlaceOrder extends Component {\n  constructor() {\n    super();\n    this.state = {\n      taxPrice: \"\",\n      shippingPrice: \"\",\n      totalPrice: \"\",\n      itemsPrice: \"\",\n    };\n  }\n  placeOrderHandler = () => {\n    const cart = this.props.getCartData;\n    const { taxPrice, shippingPrice, totalPrice, itemsPrice } = this.state;\n\n    const token = this.props.getLoginInfoData.userInfo.token;\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    };\n    axios\n      .post(\n        `/api/orders`,\n        {\n          orderItems: cart.cartItems,\n          shippingAddress: cart.shippingAddress,\n          paymentMethod: cart.paymentAddress.paymentMethod,\n          taxPrice,\n          shippingPrice,\n          totalPrice,\n          itemsPrice,\n        },\n        config\n      )\n      .then((response) => {\n        localStorage.removeItem(\"cartItems\", []);\n\n        this.props.history.push(`/order/${response.data._id}`);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  componentDidMount() {\n    const cart = this.props.getCartData;\n    const itemsPrice = cart.cartItems\n      .reduce((acc, item) => acc + item.qty * item.price, 0)\n      .toFixed(2);\n\n    const shippingPrice = itemsPrice > 100 ? 0 : 100;\n    const taxPrice = this.addDecimals(Number((0.05 * itemsPrice).toFixed(2)));\n    const totalPrice = (\n      Number(itemsPrice) +\n      Number(shippingPrice) +\n      Number(taxPrice)\n    ).toFixed(2);\n\n    this.setState({\n      taxPrice,\n      shippingPrice,\n      totalPrice,\n      itemsPrice,\n    });\n  }\n\n  addDecimals = (num) => {\n    return (Math.round(num * 100) / 100).toFixed(2);\n  };\n\n  render() {\n    const cart = this.props.getCartData;\n\n    const { itemsPrice, shippingPrice, taxPrice, totalPrice } = this.state;\n    if (!cart.cartItems) {\n      return <Loader />;\n    }\n\n    return (\n      <Container className='py-5'>\n        <CheckoutSteps step1 step2 step3 step4 />\n        <Row>\n          <Col ms={8}>\n            <ListGroup variant='flush'>\n              <ListGroup.Item>\n                <h4>Shipping:</h4>\n                <p>\n                  {cart.shippingAddress.address}, {cart.shippingAddress.city},{\" \"}\n                  {cart.shippingAddress.postalCode},{\" \"}\n                  {cart.shippingAddress.country}\n                </p>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <h4>Payment:</h4>\n                <p>Method: {cart.paymentAddress.paymentMethod}</p>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <h4>Order Items:</h4>\n                {cart.cartItems.length === 0 ? (\n                  <p>Cart is empty</p>\n                ) : (\n                  <ListGroup variant='flush'>\n                    {cart.cartItems.map((item, index) => {\n                      return (\n                        <ListGroup.Item key={index}>\n                          <Row>\n                            <Col md={1}>\n                              <Image\n                                src={item.image}\n                                alt={item.name}\n                                fluid\n                                rounded\n                              />\n                            </Col>\n                            <Col>\n                              <Link to={`/product/${item.product}`}>\n                                {item.name}\n                              </Link>\n                            </Col>\n\n                            <Col md={4}>\n                              {item.qty} x ${item.price} = $\n                              {item.qty * item.price}\n                            </Col>\n                          </Row>\n                        </ListGroup.Item>\n                      );\n                    })}\n                  </ListGroup>\n                )}\n              </ListGroup.Item>\n            </ListGroup>\n          </Col>\n\n          <Col md={4}>\n            <Card>\n              <ListGroup variant='flush'>\n                <ListGroup.Item>\n                  <h4>Order Summary</h4>\n                </ListGroup.Item>\n\n                <ListGroup.Item variant='flush'>\n                  <Row>\n                    <Col>Items</Col>\n                    <Col>${itemsPrice}</Col>\n                  </Row>\n\n                  <Row>\n                    <Col>Shipping</Col>\n                    <Col>${shippingPrice}</Col>\n                  </Row>\n\n                  <Row>\n                    <Col>Tax</Col>\n                    <Col>${taxPrice}</Col>\n                  </Row>\n                  <Row>\n                    <Col>Total</Col>\n                    <Col>${totalPrice}</Col>\n                  </Row>\n                </ListGroup.Item>\n\n                <ListGroup.Item>\n                  <Button\n                    type='button'\n                    className='btn-block'\n                    disabled={cart.cartItems.length === 0}\n                    onClick={() => this.placeOrderHandler()}>\n                    Place Order\n                  </Button>\n                </ListGroup.Item>\n              </ListGroup>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    getLoginInfoData: state.userLogin,\n    getCartData: state.cart,\n    getOrderData: state.createOrder,\n  };\n};\n\nexport default connect(mapStateToProps)(PlaceOrder);\n","/Users/shravanmeena/Desktop/ecommerce/frontend/src/screens/Register.js",["206","207","208"],"import React, { Component } from \"react\";\nimport { Form, Button, Row, Col, Container } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport FormContainer from \"../component/FormContainer\";\nimport { register } from \"../actions/userActions\";\nimport { connect } from \"react-redux\";\nimport Loader from \"../component/Loader\";\nimport Error from \"../component/common/Error\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      confirm_password: \"\",\n      error: false,\n    };\n  }\n\n  submitHandler = (e) => {\n    e.preventDefault();\n    const { name, email, password } = this.state;\n    if (!email && !password && !name) {\n      this.setState({\n        error: true,\n      });\n      return;\n    }\n    this.props.dispatch(register(name, email, password));\n  };\n\n  componentDidMount() {\n    if (this.props.getLoginInfoData.userInfo) {\n      this.props.history.push(\"/\");\n    }\n  }\n  render() {\n    const { loading, error, userInfo } = this.props.getLoginInfoData;\n    const redirect = this.props.location.search\n      ? this.props.location.search.split(\"=\")\n      : \"/\";\n\n    const { name, email, password } = this.state;\n\n    return (\n      <FormContainer>\n        <h2>Create account</h2>\n        {this.state.error && (\n          <Error variant='danger' message='Enter name, email, password ' />\n        )}\n        <Form>\n          <Form.Group controlId='formBasicEmail'>\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type='text'\n              placeholder='Enter your name'\n              value={name}\n              onChange={(e) => this.setState({ name: e.target.value })}\n            />\n          </Form.Group>\n\n          <Form.Group controlId='formBasicEmail'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              type='email'\n              placeholder='Enter email'\n              value={email}\n              onChange={(e) => this.setState({ email: e.target.value })}\n            />\n            <Form.Text className='text-muted'>\n              We'll never share your email with anyone else.\n            </Form.Text>\n          </Form.Group>\n\n          <Form.Group controlId='formBasicPassword'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type='password'\n              placeholder='Password'\n              value={password}\n              onChange={(e) => this.setState({ password: e.target.value })}\n            />\n          </Form.Group>\n\n          {loading ? (\n            <Loader />\n          ) : (\n            <Button\n              variant='primary'\n              type='submit'\n              onClick={this.submitHandler}>\n              Submit\n            </Button>\n          )}\n        </Form>\n\n        <Row className='py-4 justify-content-md-center'>\n          <Col>\n            Have an account{\" \"}\n            <Link to={redirect ? `/login?redirect=${redirect}` : \"/register\"}>\n              Login\n            </Link>\n          </Col>\n        </Row>\n      </FormContainer>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    getLoginInfoData: state.userLogin,\n  };\n};\n\nexport default connect(mapStateToProps)(Register);\n","/Users/shravanmeena/Desktop/ecommerce/frontend/src/screens/Cart.js",[],"/Users/shravanmeena/Desktop/ecommerce/frontend/src/screens/UserEditScreen.js",["209","210","211","212"],"import React, { Component } from \"react\";\nimport { Form, Button, Row, Col, Container } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport FormContainer from \"../component/FormContainer\";\nimport { getUserDetails } from \"../actions/userActions\";\nimport { connect } from \"react-redux\";\nimport Loader from \"../component/Loader\";\nimport axios from \"axios\";\nclass UserEditScreen extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"\",\n      email: \"\",\n      isAdmin: false,\n      loading: true,\n    };\n  }\n\n  submitHandler = (e) => {\n    this.setState({\n      loading: true,\n    });\n    // e.preventDefault();\n    const { name, email, isAdmin } = this.state;\n    const data = {\n      name,\n      email,\n      isAdmin,\n    };\n    const token = this.props.getLoginInfoData.userInfo.token;\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    };\n\n    axios\n      .put(`/api/users/${this.props.match.params.id}`, data, config)\n      .then((response) => {\n        this.props.history.push(\"/admin/userlist\");\n\n        this.setState({\n          name: response.data.user.name,\n          email: response.data.user.email,\n          isAdmin: response.data.user.isAdmin,\n          loading: false,\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n        this.setState({\n          loading: false,\n        });\n      });\n  };\n\n  componentDidMount() {\n    this.setState({\n      loading: true,\n    });\n    const token = this.props.getLoginInfoData.userInfo.token;\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    };\n\n    axios\n      .get(`/api/users/${this.props.match.params.id}`, config)\n      .then((response) => {\n        this.setState({\n          name: response.data.user.name,\n          email: response.data.user.email,\n          isAdmin: response.data.user.isAdmin,\n          loading: false,\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n        this.setState({\n          loading: false,\n        });\n      });\n  }\n\n  render() {\n    const { name, email, isAdmin } = this.state;\n    return (\n      <>\n        <Link to='/admin/userlist' className='btn btn-light mt-5 ml-5'>\n          <i className='fa fa-arrow-left'></i> Go back\n        </Link>\n\n        <FormContainer>\n          <h2>Edit User Details</h2>\n          {this.state.loading ? (\n            <Loader />\n          ) : (\n            <Form>\n              <Form.Group controlId='formBasicEmail'>\n                <Form.Label>Name</Form.Label>\n                <Form.Control\n                  type='text'\n                  placeholder='Enter your name'\n                  value={name}\n                  onChange={(e) => this.setState({ name: e.target.value })}\n                />\n              </Form.Group>\n\n              <Form.Group controlId='formBasicEmail'>\n                <Form.Label>Email address</Form.Label>\n                <Form.Control\n                  type='email'\n                  placeholder='Enter email'\n                  value={email}\n                  onChange={(e) => this.setState({ email: e.target.value })}\n                />\n                <Form.Text className='text-muted'>\n                  We'll never share your email with anyone else.\n                </Form.Text>\n              </Form.Group>\n\n              <Form.Group controlId='isAdmin'>\n                <Form.Check\n                  type='Checkbox'\n                  label='Is Admin'\n                  checked={isAdmin}\n                  onChange={(e) => this.setState({ isAdmin: e.target.checked })}\n                />\n              </Form.Group>\n\n              {false ? (\n                <Loader />\n              ) : (\n                <Button\n                  variant='primary'\n                  type='submit'\n                  onClick={this.submitHandler}>\n                  Update\n                </Button>\n              )}\n            </Form>\n          )}\n        </FormContainer>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    getLoginInfoData: state.userLogin,\n    getUserDetailsData: state.getUserDetails,\n  };\n};\n\nexport default connect(mapStateToProps)(UserEditScreen);\n","/Users/shravanmeena/Desktop/ecommerce/frontend/src/screens/UserListScreen.js",["213","214","215","216","217"],"/Users/shravanmeena/Desktop/ecommerce/frontend/src/screens/PaymentAddress.js",["218","219","220","221","222","223"],"import React, { Component } from \"react\";\nimport { Form, Button, Row, Col, Container } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport FormContainer from \"../component/FormContainer\";\nimport { login } from \"../actions/userActions\";\nimport { connect } from \"react-redux\";\nimport Loader from \"../component/Loader\";\nimport { savePaymentMethodAddress } from \"../actions/cartActions\";\nimport CheckoutSteps from \"../component/CheckoutSteps\";\n\nclass PaymentAddress extends Component {\n  constructor() {\n    super();\n    this.state = {\n      paymentMethod: \"PayPal\",\n    };\n  }\n  submitHandler = (e) => {\n    const { paymentMethod } = this.state;\n    e.preventDefault();\n    this.props.dispatch(savePaymentMethodAddress({ paymentMethod }));\n    this.props.history.push(\"/placeorder\");\n  };\n\n  //   componentDidMount() {\n  //     const paymentAddress = this.props.getcartData;\n  //     if (paymentAddress) {\n  //       this.setState({\n  //         paymentMethod: paymentAddress.paymentMethod,\n  //       });\n  //     } else {\n  //       return;\n  //     }\n  //   }\n  render() {\n    return (\n      <FormContainer>\n        <CheckoutSteps step1 step2 step3 />\n\n        <h2>Payment Method</h2>\n        <Form>\n          <Form.Check\n            type='radio'\n            label='Paypal or Credit Card'\n            id='PayPal'\n            name='paymentMethod'\n            value='PayPal'\n            checked\n            onChange={(e) => this.setState({ paymentMethod: e.target.value })}\n            className='py-2'\n          />\n\n          {/* <Form.Check\n            type='radio'\n            label='Stripe'\n            id='Stripe'\n            name='paymentMethod'\n            value='Stripe'\n            checked\n            onChange={(e) => this.setState({ paymentMethod: e.target.value })}\n            className='py-2'\n          /> */}\n          <br />\n          <Button variant='primary' type='submit' onClick={this.submitHandler}>\n            Continue\n          </Button>\n        </Form>\n      </FormContainer>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    getLoginInfoData: state.userLogin,\n  };\n};\n\nexport default connect(mapStateToProps)(PaymentAddress);\n","/Users/shravanmeena/Desktop/ecommerce/frontend/src/screens/ProductListScreen.js",["224","225","226"],"/Users/shravanmeena/Desktop/ecommerce/frontend/src/screens/ProductEditScreen.js",["227","228","229","230","231"],"import React, { Component } from \"react\";\nimport { Form, Button, Row, Col, Container } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport FormContainer from \"../component/FormContainer\";\nimport { getUserDetails } from \"../actions/userActions\";\nimport { connect } from \"react-redux\";\nimport Loader from \"../component/Loader\";\nimport axios from \"axios\";\n\nclass ProductEditScreen extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"\",\n      price: \"\",\n      image: \"\",\n      brand: \"\",\n      category: \"\",\n      countInStock: \"\",\n      numReviews: 0,\n      imageUrl: \"https://placeimg.com/320/320/animals\",\n\n      description: \"\",\n      loading: true,\n      uploading: false,\n    };\n  }\n\n  submitHandler = (e) => {\n    this.setState({\n      loading: true,\n    });\n    // e.preventDefault();\n    const {\n      name,\n      price,\n      image,\n      brand,\n      category,\n      countInStock,\n      numReviews,\n      description,\n    } = this.state;\n    const data = {\n      name,\n      price,\n      image,\n      brand,\n      category,\n      countInStock,\n      numReviews,\n      description,\n    };\n    const token = this.props.getLoginInfoData.userInfo.token;\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    };\n\n    axios\n      .put(`/api/products/${this.props.match.params.id}`, data, config)\n      .then((response) => {\n        this.props.history.push(`/admin/productslist`);\n        this.setState({\n          loading: false,\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n        this.setState({\n          loading: false,\n        });\n      });\n  };\n\n  componentDidMount() {\n    this.setState({\n      loading: true,\n    });\n    const token = this.props.getLoginInfoData.userInfo.token;\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    };\n\n    axios\n      .get(`/api/products/${this.props.match.params.id}`, config)\n      .then((response) => {\n        console.log(response.data);\n        this.setState({\n          name: response.data.name,\n          price: response.data.price,\n          image: response.data.image,\n          brand: response.data.brand,\n          category: response.data.category,\n          countInStock: response.data.countInStock,\n          numReviews: response.data.numReviews,\n          description: response.data.description,\n          loading: false,\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n        this.setState({\n          loading: false,\n        });\n      });\n  }\n\n  onFileChange = (event) => {\n    this.setState({\n      uploading: true,\n    });\n    var formdata = new FormData();\n    formdata.append(\"image\", event.target.files[0]);\n    formdata.append(\"filetype\", \"IMG\");\n    axios({\n      method: \"post\",\n      url: `/api/upload`,\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n      },\n      data: formdata,\n    })\n      .then((res) => {\n        this.setState({\n          image: res.data,\n          uploading: false,\n        });\n      })\n      .catch((err) => {\n        this.setState({\n          uploading: false,\n        });\n        console.log(\"Error : \" + err);\n      });\n  };\n\n  render() {\n    const {\n      name,\n      price,\n      image,\n      brand,\n      category,\n      countInStock,\n      numReviews,\n      description,\n    } = this.state;\n    return (\n      <>\n        <Link to='/admin/productslist' className='btn btn-light mt-5 ml-5'>\n          <i className='fa fa-arrow-left'></i> Go back\n        </Link>\n\n        <FormContainer>\n          <h2>Edit Product Details</h2>\n          {this.state.loading ? (\n            <Loader />\n          ) : (\n            <Form>\n              {/* <img\n                width='320'\n                src={`//uploads/image - 1615302608565.png`}\n              /> */}\n\n              <Form.Group controlId='formBasicEmail'>\n                <Form.Label>Name</Form.Label>\n                <Form.Control\n                  type='text'\n                  placeholder='Enter product name'\n                  value={name}\n                  onChange={(e) => this.setState({ name: e.target.value })}\n                />\n              </Form.Group>\n\n              <Form.Group controlId='price'>\n                <Form.Label>Price</Form.Label>\n                <Form.Control\n                  type='text'\n                  placeholder='Enter Product Price'\n                  value={price}\n                  onChange={(e) => this.setState({ price: e.target.value })}\n                />\n              </Form.Group>\n\n              <Form.Group controlId='category'>\n                <Form.Label>Category</Form.Label>\n                <Form.Control\n                  type='text'\n                  placeholder='Enter category'\n                  value={category}\n                  onChange={(e) => this.setState({ category: e.target.value })}\n                />\n              </Form.Group>\n\n              <Form.Group controlId='category'>\n                <Form.Label>Brand</Form.Label>\n                <Form.Control\n                  type='text'\n                  placeholder='Enter category'\n                  value={brand}\n                  onChange={(e) => this.setState({ brand: e.target.value })}\n                />\n              </Form.Group>\n\n              <Form.Group controlId='countInStock'>\n                <Form.Label>Count In Stock</Form.Label>\n                <Form.Control\n                  type='text'\n                  placeholder='Enter stock limit'\n                  value={countInStock}\n                  onChange={(e) =>\n                    this.setState({ countInStock: e.target.value })\n                  }\n                />\n              </Form.Group>\n\n              <Form.Group controlId='description'>\n                <Form.Label>Description</Form.Label>\n                <Form.Control\n                  type='text'\n                  placeholder='Enter description'\n                  value={description}\n                  onChange={(e) =>\n                    this.setState({ description: e.target.value })\n                  }\n                />\n              </Form.Group>\n\n              <Form.Group controlId='image'>\n                <Form.Label> Image </Form.Label>\n                <Form.Control\n                  type='text'\n                  placeholder='Enter image url'\n                  value={image}\n                  onChange={(e) => this.setState({ image: e.target.value })}\n                />\n                <Form.File\n                  id='img-upload'\n                  label='Choose File'\n                  custom\n                  onChange={this.onFileChange}\n                />\n\n                {this.state.uploading && <Loader />}\n              </Form.Group>\n\n              {/* <Form.Group controlId='isAdmin'>\n                <Form.Check\n                  type='Checkbox'\n                  label='Is Admin'\n                  checked={isAdmin}\n                  onChange={(e) => this.setState({ isAdmin: e.target.checked })}\n                />\n              </Form.Group> */}\n\n              {false ? (\n                <Loader />\n              ) : (\n                <Button\n                  variant='primary'\n                  type='submit'\n                  onClick={this.submitHandler}>\n                  Update\n                </Button>\n              )}\n            </Form>\n          )}\n        </FormContainer>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    getLoginInfoData: state.userLogin,\n    getUserDetailsData: state.getUserDetails,\n  };\n};\n\nexport default connect(mapStateToProps)(ProductEditScreen);\n","/Users/shravanmeena/Desktop/ecommerce/frontend/src/screens/ProfileScreen.js",["232","233"],"import React, { Component } from \"react\";\nimport { Form, Button, Row, Col, Container, Table } from \"react-bootstrap\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { updateUserProfile } from \"../actions/userActions.js\";\nimport { connect } from \"react-redux\";\nimport Loader from \"../component/Loader\";\nimport axios from \"axios\";\nimport Message from \"../component/Message\";\n\nclass ProfileScreen extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      confirm_password: \"\",\n      loading: true,\n      myOrders: [],\n    };\n  }\n  componentDidMount() {\n    const token = this.props.getLoginInfoData.userInfo.token;\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    };\n\n    axios\n      .get(\"/api/users/profile\", config)\n      .then((response) => {\n        this.setState({\n          name: response.data.name,\n          email: response.data.email,\n          loading: false,\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n\n    axios\n      .get(\"/api/orders/myorders\", config)\n      .then((response) => {\n        this.setState({\n          myOrders: response.data,\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  submitHandler = (e) => {\n    e.preventDefault();\n    this.props.dispatch(\n      updateUserProfile({\n        // id: this.props.getLoginInfoData.userInfo.id,\n        name: this.state.name,\n        email: this.state.email,\n        password: this.state.password,\n      })\n    );\n  };\n\n  render() {\n    if (!this.props.getLoginInfoData.userInfo) {\n      return <Redirect to='/login' />;\n    }\n    const { name, email, password } = this.state;\n\n    return (\n      <Container className='py-4'>\n        {!this.state.loading ? (\n          <Row>\n            <Col md={4}>\n              <h3>User Profile</h3>\n              <Form>\n                <Form.Group controlId='formBasicEmail'>\n                  <Form.Label>Name</Form.Label>\n                  <Form.Control\n                    type='text'\n                    placeholder='Enter your name'\n                    value={name}\n                    onChange={(e) => this.setState({ name: e.target.value })}\n                  />\n                </Form.Group>\n\n                <Form.Group controlId='formBasicEmail'>\n                  <Form.Label>Email address</Form.Label>\n                  <Form.Control\n                    type='email'\n                    placeholder='Enter email'\n                    value={email}\n                    onChange={(e) => this.setState({ email: e.target.value })}\n                  />\n                  <Form.Text className='text-muted'>\n                    We'll never share your email with anyone else.\n                  </Form.Text>\n                </Form.Group>\n\n                <Form.Group controlId='formBasicPassword'>\n                  <Form.Label>Password</Form.Label>\n                  <Form.Control\n                    type='password'\n                    placeholder='Password'\n                    value={password}\n                    onChange={(e) =>\n                      this.setState({ password: e.target.value })\n                    }\n                  />\n                </Form.Group>\n\n                <Button\n                  variant='primary'\n                  type='submit'\n                  className='w-100'\n                  onClick={this.submitHandler}>\n                  Update profile\n                </Button>\n              </Form>\n            </Col>\n            <Col md={8}>\n              <h4>My Orders</h4>\n\n              <Table striped bordered hover responsive className='table-sm'>\n                <thead>\n                  <tr>\n                    <th>ID</th>\n                    <th>TOTAL</th>\n                    <th>PAID</th>\n                    <th>DELIVERED</th>\n                    <th></th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {this.state.myOrders ? (\n                    <>\n                      {this.state.myOrders.reverse().map((order, index) => {\n                        return (\n                          <tr>\n                            <th scope='row'>{order._id}</th>\n                            <td>${order.totalPrice}</td>\n                            <td>\n                              {order.isPaid ? (\n                                order.paidAt.substring(0, 10)\n                              ) : (\n                                <i\n                                  style={{ color: \"red\" }}\n                                  className='fa fa-times'></i>\n                              )}\n                            </td>\n                            <td>\n                              {order.isDelivered ? (\n                                order.deliveredAt.substring(0, 10)\n                              ) : (\n                                <i\n                                  style={{ color: \"red\" }}\n                                  className='fa fa-times'></i>\n                              )}\n                            </td>\n\n                            <td>\n                              <LinkContainer to={`order/${order._id}`}>\n                                <Button variant='light'>Details</Button>\n                              </LinkContainer>\n                            </td>\n                          </tr>\n                        );\n                      })}\n                    </>\n                  ) : (\n                    <h4>No order yet</h4>\n                  )}\n                </tbody>\n              </Table>\n            </Col>\n          </Row>\n        ) : (\n          <Loader />\n        )}\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    getLoginInfoData: state.userLogin,\n    getUserDetailsData: state.userDetails,\n  };\n};\n\nexport default connect(mapStateToProps)(ProfileScreen);\n","/Users/shravanmeena/Desktop/ecommerce/frontend/src/screens/OrderScreen.js",["234"],"import React, { Component } from \"react\";\nimport { deliveredOrder, payOrder } from \"../actions/orderActions\";\nimport { PayPalButton } from \"react-paypal-button-v2\";\nimport { connect } from \"react-redux\";\nimport CheckoutSteps from \"../component/CheckoutSteps\";\nimport axios from \"axios\";\nimport Loader from \"../component/Loader\";\nimport {\n  Col,\n  Container,\n  ListGroup,\n  Row,\n  Image,\n  Card,\n  Button,\n  Alert,\n} from \"react-bootstrap\";\nimport { Link, Redirect } from \"react-router-dom\";\n\nclass OrderScreen extends Component {\n  constructor() {\n    super();\n    this.state = {\n      taxPrice: \"\",\n      shippingPrice: \"\",\n      totalPrice: \"\",\n      itemsPrice: \"\",\n      data: [],\n      sdkReady: false,\n    };\n  }\n\n  componentDidMount() {\n    const addPaypalScript = async () => {\n      const { data: clientId } = await axios.get(`/api/config/paypal`);\n\n      const script = document.createElement(\"script\");\n      script.type = \"text/javascript\";\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\n      script.async = true;\n\n      script.onload = () => {\n        this.setState({\n          sdkReady: true,\n        });\n      };\n      document.body.appendChild(script);\n    };\n\n    const token = this.props.getLoginInfoData.userInfo.token;\n    const config = {\n      headers: {\n        // \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    };\n    axios\n      .get(`/api/orders/${this.props.match.params.id}`, config)\n      .then((response) => {\n        this.setState({\n          data: response.data,\n        });\n\n        if (!response.data.isPaid) {\n          if (!window.paypal) {\n            addPaypalScript();\n          } else {\n            this.setState({\n              sdkReady: true,\n            });\n          }\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n\n    // order paid or not\n    // console.log(this.state.data);\n  }\n\n  successPaymentHandler = (details, data) => {\n    const paymentResult = {\n      id: details.id,\n      status: details.status,\n      update_time: details.update_time,\n      email_address: details.payer.email_address,\n    };\n    this.props.dispatch(payOrder(this.props.match.params.id, paymentResult));\n\n    setTimeout(() => {\n      window.location.reload();\n    }, 100);\n  };\n\n  orderDeliveredHandler = () => {\n    this.props.dispatch(deliveredOrder(this.props.match.params.id));\n    setTimeout(() => {\n      window.location.reload();\n    }, 100);\n  };\n\n  render() {\n    if (!this.props.getLoginInfoData.userInfo) {\n      return <Redirect to='/login' />;\n    }\n    const order = this.state.data;\n\n    const user = this.props.getLoginInfoData;\n    if (!order.shippingAddress && !order.orderItems) {\n      return <Loader />;\n    }\n\n    return (\n      <Container className='py-5'>\n        <Row>\n          <Col ms={8}>\n            <h4>Order {order._id}</h4>\n\n            <ListGroup variant='flush'>\n              <ListGroup.Item>\n                <h4>Shipping:</h4>\n                <p>Name: {user.userInfo.name}</p>\n                <p>Email: {user.userInfo.email}</p>\n                <p>\n                  Address: {order.shippingAddress[0].address}{\" \"}\n                  {order.shippingAddress[0].city}{\" \"}\n                  {order.shippingAddress[0].postalCode}{\" \"}\n                  {order.shippingAddress[0].country}\n                </p>\n\n                {order.isDelivered ? (\n                  <Alert variant='success'>Delivere at {order.paidAt}</Alert>\n                ) : (\n                  <Alert variant='danger'>Not Delivered</Alert>\n                )}\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <h4>Payment:</h4>\n                <p>Method: {order.paymentMethod}</p>\n                {order.isPaid ? (\n                  <Alert variant='success'>Paid at {order.paidAt}</Alert>\n                ) : (\n                  <Alert variant='danger'>Not Paid</Alert>\n                )}\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <h4>Order Items:</h4>\n                {order.orderItems.length === 0 ? (\n                  <p>Cart is empty</p>\n                ) : (\n                  <ListGroup variant='flush'>\n                    {order.orderItems.map((item, index) => {\n                      return (\n                        <ListGroup.Item key={index}>\n                          <Row>\n                            <Col md={1}>\n                              <Image\n                                src={item.image}\n                                alt={item.name}\n                                fluid\n                                rounded\n                              />\n                            </Col>\n                            <Col>\n                              <Link to={`/product/${item.product}`}>\n                                {item.name}\n                              </Link>\n                            </Col>\n\n                            <Col md={4}>\n                              {item.qty} x ${item.price} = $\n                              {item.qty * item.price}\n                            </Col>\n                          </Row>\n                        </ListGroup.Item>\n                      );\n                    })}\n                  </ListGroup>\n                )}\n              </ListGroup.Item>\n            </ListGroup>\n          </Col>\n\n          <Col md={4}>\n            <Card>\n              <ListGroup variant='flush'>\n                <ListGroup.Item>\n                  <h4>Order Summary</h4>\n                </ListGroup.Item>\n\n                <ListGroup.Item variant='flush'>\n                  <Row>\n                    <Col>Items</Col>\n                    <Col>${order.itemsPrice}</Col>\n                  </Row>\n\n                  <Row>\n                    <Col>Shipping</Col>\n                    <Col>${order.shippingPrice}</Col>\n                  </Row>\n\n                  <Row>\n                    <Col>Tax</Col>\n                    <Col>${order.taxPrice}</Col>\n                  </Row>\n                  <Row>\n                    <Col>Total</Col>\n                    <Col>${order.totalPrice}</Col>\n                  </Row>\n                </ListGroup.Item>\n                {!order.isPaid && (\n                  <ListGroup.Item>\n                    {!this.state.sdkReady ? (\n                      <Loader />\n                    ) : (\n                      <PayPalButton\n                        amount={order.totalPrice}\n                        onSuccess={(details, data) =>\n                          this.successPaymentHandler(details, data)\n                        }\n                      />\n                    )}\n                  </ListGroup.Item>\n                )}\n\n                {user.userInfo.isAdmin && order.isPaid && !order.isDelivered && (\n                  <ListGroup.Item>\n                    <Button\n                      className='btn btn-block'\n                      type='button'\n                      onClick={this.orderDeliveredHandler}>\n                      Mark As Delivered\n                    </Button>\n                  </ListGroup.Item>\n                )}\n              </ListGroup>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    getLoginInfoData: state.userLogin,\n    getCartData: state.cart,\n    getOrderDetailsData: state.orderDetails,\n    getOrderPaymentData: state.orderPay,\n  };\n};\n\nexport default connect(mapStateToProps)(OrderScreen);\n","/Users/shravanmeena/Desktop/ecommerce/frontend/src/screens/Home.js",[],"/Users/shravanmeena/Desktop/ecommerce/frontend/src/component/ProductDetails.js",["235","236"],"import React, { Component } from \"react\";\nimport {\n  Container,\n  Row,\n  Col,\n  Image,\n  Card,\n  ListGroup,\n  Button,\n  Form,\n} from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport {\n  listProductDetails,\n  createProductReview,\n} from \"../actions/productActions\";\nimport Loader from \"./Loader\";\nimport Message from \"./Message\";\nimport Rating from \"./Rating\";\nimport { Link } from \"react-router-dom\";\nimport Meta from \"./Meta\";\n\nclass ProductDetails extends Component {\n  constructor() {\n    super();\n    this.state = {\n      Product: [],\n      qty: 1,\n      rating: 1,\n      comment: \"\",\n    };\n  }\n  componentDidMount() {\n    this.props.dispatch(listProductDetails(this.props.match.params.id));\n  }\n\n  addToCartHandler = () => {\n    this.props.history.push(\n      `/cart/${this.props.match.params.id}?qty=${this.state.qty}`\n    );\n  };\n\n  submitHandler = (e) => {\n    this.props.dispatch(\n      createProductReview(this.props.match.params.id, {\n        rating: this.state.rating,\n        comment: this.state.comment,\n      })\n    );\n    setTimeout(() => {\n      window.location.reload();\n    }, 100);\n  };\n  render() {\n    const { loading, error, product } = this.props.getProductDetailsData;\n    const { userInfo } = this.props.getLoginInfoData;\n\n    return (\n      <div className='py-5 px-5'>\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message />\n        ) : (\n          <>\n            <Meta title={product.name} />\n            <Row>\n              <Col sm={12} md={6} lg={4} xl={4}>\n                <Image style={{ width: \"100%\" }} src={product.image} rounded />\n              </Col>\n              <Col sm={12} md={6} lg={4} xl={4}>\n                <Card style={{ border: \"none\" }}>\n                  <ListGroup variant='flush'>\n                    <ListGroup.Item as='h3'>{product.name}</ListGroup.Item>\n                    <ListGroup.Item>\n                      {/* {product.rating} rating from {product.numReviews} reviews */}\n                      <Rating\n                        value={product.rating}\n                        text={`${product.numReviews} reviews`}\n                      />\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      Price:{\" \"}\n                      <span style={{ fontWeight: 700 }}>${product.price}</span>\n                    </ListGroup.Item>\n                    <ListGroup.Item>{product.description}</ListGroup.Item>\n                  </ListGroup>\n                </Card>\n              </Col>\n              <Col sm={12} md={6} lg={4} xl={4}>\n                <Card>\n                  <ListGroup variant='flush'>\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>Price: </Col>\n                        <Col>${product.price}</Col>\n                      </Row>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>Status:</Col>\n                        <Col>\n                          {product.countInStock > 0 ? (\n                            <span style={{ color: \"green\" }}>In Stock</span>\n                          ) : (\n                            <span style={{ color: \"red\" }}>Out of stock</span>\n                          )}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>Qty:</Col>\n                        <Col>\n                          {product.countInStock > 0 ? (\n                            <Form.Control\n                              as='select'\n                              value={this.state.qty}\n                              onChange={(e) =>\n                                this.setState({ qty: e.target.value })\n                              }>\n                              {[...Array(product.countInStock).keys()].map(\n                                (x) => (\n                                  <option key={x + 1} value={x + 1}>\n                                    {x + 1}\n                                  </option>\n                                )\n                              )}\n                            </Form.Control>\n                          ) : (\n                            0\n                          )}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n\n                    <ListGroup.Item>\n                      <Button\n                        onClick={this.addToCartHandler}\n                        disabled={product.countInStock === 0}\n                        style={{ width: \"100%\" }}\n                        variant='dark'>\n                        Add To Cart\n                      </Button>\n                    </ListGroup.Item>\n                  </ListGroup>\n                </Card>\n              </Col>\n            </Row>\n            <Row className='py-5'>\n              <Col md={6}>\n                <ListGroup variant='flush'>\n                  <ListGroup.Item>\n                    <h4>Write a customer review</h4>\n                    {userInfo ? (\n                      <Form>\n                        <Form.Group controllId='rating'>\n                          <Form.Label>Rating</Form.Label>\n                          <Form.Control\n                            as='select'\n                            value={this.state.rating}\n                            onChange={(e) =>\n                              this.setState({ rating: e.target.value })\n                            }>\n                            <option value=''>Select...</option>\n                            <option value='1'>1 - Poor</option>\n                            <option value='2'>2 - Fair</option>\n                            <option value='3'>3 - Good</option>\n                            <option value='4'>4 - Very Good</option>\n                            <option value='5'>5 - Excellent</option>\n                          </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controllId='comment'>\n                          <Form.Label>Comment</Form.Label>\n                          <Form.Control\n                            as='textarea'\n                            row='3'\n                            value={this.state.comment}\n                            onChange={(e) =>\n                              this.setState({ comment: e.target.value })\n                            }></Form.Control>\n                          <Form.Text className='text-muted'>\n                            One user is only add one review !!!\n                          </Form.Text>\n                          <Button\n                            type='button'\n                            className='my-2'\n                            variant='primary'\n                            onClick={this.submitHandler}>\n                            Submit\n                          </Button>\n                        </Form.Group>\n                      </Form>\n                    ) : (\n                      <p>\n                        Please{\" \"}\n                        <Link to='/login' style={{ color: \"red\" }}>\n                          sign in\n                        </Link>{\" \"}\n                        to write a review{\" \"}\n                      </p>\n                    )}\n                  </ListGroup.Item>\n                </ListGroup>\n              </Col>\n\n              <Col md={6}>\n                <ListGroup variant='flush'>\n                  <h4>Reviews</h4>\n                  {product.reviews.length === 0 && <p>No reviews</p>}\n\n                  {product.reviews.map((review) => (\n                    <ListGroup.Item key={review._id}>\n                      <h6>{review.name}</h6>\n                      <Rating value={review.rating} text={``} />\n                      <p>{review.createdAt.substring(0, 10)}</p>\n                      <p>{review.comment}</p>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              </Col>\n            </Row>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    getProductDetailsData: state.productDetails,\n    getLoginInfoData: state.userLogin,\n  };\n};\n\nexport default connect(mapStateToProps)(ProductDetails);\n","/Users/shravanmeena/Desktop/ecommerce/frontend/src/screens/SignScreen.js",["237","238","239"],"import React, { Component } from \"react\";\nimport { Form, Button, Row, Col, Container } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport FormContainer from \"../component/FormContainer\";\nimport { login } from \"../actions/userActions\";\nimport { connect } from \"react-redux\";\nimport Loader from \"../component/Loader\";\nimport Error from \"../component/common/Error\";\n\nclass SignScreen extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      password: \"\",\n      error: false,\n    };\n  }\n\n  submitHandler = (e) => {\n    const { email, password } = this.state;\n    if (!email && !password) {\n      this.setState({\n        error: true,\n      });\n      return;\n    }\n    e.preventDefault();\n    this.props.dispatch(login(email, password));\n  };\n\n  componentDidMount() {\n    if (this.props.getLoginInfoData.userInfo) {\n      this.props.history.push(\"/\");\n    }\n  }\n  render() {\n    const { loading, error, userInfo } = this.props.getLoginInfoData;\n    const redirect = this.props.location.search\n      ? this.props.location.search.split(\"=\")\n      : \"/\";\n    return (\n      <FormContainer>\n        <h2>Login</h2>\n        {this.state.error && (\n          <Error variant='danger' message='Email Or Password Wrong!' />\n        )}\n        <Form>\n          <Form.Group controlId='formBasicEmail'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              type='email'\n              placeholder='Enter email'\n              value={this.state.email}\n              onChange={(e) => this.setState({ email: e.target.value })}\n            />\n            <Form.Text className='text-muted'>\n              We'll never share your email with anyone else.\n            </Form.Text>\n          </Form.Group>\n\n          <Form.Group controlId='formBasicPassword'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type='password'\n              placeholder='Password'\n              value={this.state.password}\n              onChange={(e) => this.setState({ password: e.target.value })}\n            />\n          </Form.Group>\n\n          {loading ? (\n            <Loader />\n          ) : (\n            <Button\n              variant='primary'\n              type='submit'\n              onClick={this.submitHandler}>\n              Submit\n            </Button>\n          )}\n        </Form>\n\n        <Row className='py-4 justify-content-md-center'>\n          <Col>\n            New customer{\" \"}\n            <Link\n              to={redirect ? `/register?redirect=${redirect}` : \"/register\"}>\n              Regiser\n            </Link>\n          </Col>\n        </Row>\n      </FormContainer>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    getLoginInfoData: state.userLogin,\n  };\n};\n\nexport default connect(mapStateToProps)(SignScreen);\n","/Users/shravanmeena/Desktop/ecommerce/frontend/src/component/Header.js",["240","241","242","243","244"],"/Users/shravanmeena/Desktop/ecommerce/frontend/src/screens/ShipingAddress.js",["245","246","247","248","249"],"import React, { Component } from \"react\";\nimport { Form, Button, Row, Col, Container } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport FormContainer from \"../component/FormContainer\";\nimport { saveShippingAddress } from \"../actions/cartActions\";\nimport { connect } from \"react-redux\";\nimport Loader from \"../component/Loader\";\nimport CheckoutSteps from \"../component/CheckoutSteps\";\n\nclass ShipingAddress extends Component {\n  constructor() {\n    super();\n    this.state = {\n      address: \"\",\n      city: \"\",\n      postalCode: \"\",\n      country: \"\",\n    };\n  }\n\n  submitHandler = (e) => {\n    const { address, city, postalCode, country } = this.state;\n    e.preventDefault();\n    this.props.dispatch(\n      saveShippingAddress({ address, city, postalCode, country })\n    );\n    this.props.history.push(\"/payment\");\n  };\n\n  componentDidMount() {\n    const shippingAddress = this.props.getcartData.shippingAddress;\n    if (shippingAddress) {\n      this.setState({\n        address: shippingAddress.address,\n        city: shippingAddress.city,\n        postalCode: shippingAddress.postalCode,\n        country: shippingAddress.country,\n      });\n    } else {\n      return;\n    }\n  }\n\n  render() {\n    return (\n      <FormContainer>\n        <CheckoutSteps step1 step2 />\n        <h2>Shipping Address</h2>\n        <Form>\n          <Form.Group controlId='formBasicEmail'>\n            <Form.Label>Address</Form.Label>\n            <Form.Control\n              type='text'\n              placeholder='Enter address'\n              value={this.state.address}\n              onChange={(e) => this.setState({ address: e.target.value })}\n            />\n          </Form.Group>\n\n          <Form.Group controlId='formBasicPassword'>\n            <Form.Label>City</Form.Label>\n            <Form.Control\n              type='text'\n              placeholder='Enter city'\n              value={this.state.city}\n              onChange={(e) => this.setState({ city: e.target.value })}\n            />\n          </Form.Group>\n\n          <Form.Group controlId='formBasicEmail'>\n            <Form.Label>Postal Code</Form.Label>\n            <Form.Control\n              type='text'\n              placeholder='Enter pincode'\n              value={this.state.postalCode}\n              onChange={(e) => this.setState({ postalCode: e.target.value })}\n            />\n          </Form.Group>\n\n          <Form.Group controlId='formBasicEmail'>\n            <Form.Label>Country</Form.Label>\n            <Form.Control\n              type='text'\n              placeholder='Enter country'\n              value={this.state.country}\n              onChange={(e) => this.setState({ country: e.target.value })}\n            />\n          </Form.Group>\n          <Button variant='primary' type='submit' onClick={this.submitHandler}>\n            Continue\n          </Button>\n        </Form>\n      </FormContainer>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    getLoginInfoData: state.userLogin,\n    getcartData: state.cart,\n  };\n};\n\nexport default connect(mapStateToProps)(ShipingAddress);\n","/Users/shravanmeena/Desktop/ecommerce/frontend/src/component/Footer.js",["250"],"import React, { Component } from \"react\";\n\nexport default class Footer extends Component {\n  render() {\n    return (\n      <div className='d-flex justify-content-center py-5 mt-5'>\n        <a href='https://www.pakkamarwadi.tk/' target='_blank'>\n          <i class='fas fa-code'></i> with <i class='fas fa-heart'></i>{\" \"}\n          Pakkamarwadi\n        </a>\n      </div>\n    );\n  }\n}\n","/Users/shravanmeena/Desktop/ecommerce/frontend/src/constants/cartConstant.js",[],"/Users/shravanmeena/Desktop/ecommerce/frontend/src/constants/orderConstants.js",[],"/Users/shravanmeena/Desktop/ecommerce/frontend/src/actions/userActions.js",[],"/Users/shravanmeena/Desktop/ecommerce/frontend/src/component/CheckoutSteps.js",[],"/Users/shravanmeena/Desktop/ecommerce/frontend/src/component/Loader.js",[],"/Users/shravanmeena/Desktop/ecommerce/frontend/src/component/Message.js",[],"/Users/shravanmeena/Desktop/ecommerce/frontend/src/component/FormContainer.js",[],"/Users/shravanmeena/Desktop/ecommerce/frontend/src/component/Product.js",[],"/Users/shravanmeena/Desktop/ecommerce/frontend/src/actions/orderActions.js",["251"],"import axios from \"axios\";\nimport store from \"../store\";\nimport {\n  ORDER_CREATE_FAIL,\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_DELIVERED_REQUEST,\n  ORDER_DELIVERED_SUCCESS,\n  ORDER_DETAILS_FAIL,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_LIST_FAIL,\n  ORDER_LIST_REQUEST,\n  ORDER_LIST_SUCCESS,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_SUCCESS,\n} from \"../constants/orderConstants\";\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST,\n    });\n\n    const token = store.getState().userLogin.userInfo.token;\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    };\n\n    const { data } = await axios.post(`/api/orders`, order, config);\n\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data,\n    });\n\n    localStorage.setItem(\"orders\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST,\n    });\n\n    const token = store.getState().userLogin.userInfo.token;\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/orders/${id}`, config);\n\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const payOrder = (orderId, paymentResult) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST,\n    });\n\n    const token = store.getState().userLogin.userInfo.token;\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    };\n\n    const { data } = await axios.put(\n      `/api/orders/${orderId}/pay`,\n      paymentResult,\n      config\n    );\n\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const deliveredOrder = (orderId) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DELIVERED_REQUEST,\n    });\n\n    const token = store.getState().userLogin.userInfo.token;\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    };\n\n    const { data } = await axios.put(\n      `/api/orders/${orderId}/deliver`,\n      {},\n      config\n    );\n\n    dispatch({\n      type: ORDER_DELIVERED_SUCCESS,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const listOrders = () => async (dispatch) => {\n  try {\n    dispatch({ type: ORDER_LIST_REQUEST });\n\n    const token = store.getState().userLogin.userInfo.token;\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    };\n\n    const { data } = await axios.get(\"/api/orders\", config);\n    dispatch({ type: ORDER_LIST_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n","/Users/shravanmeena/Desktop/ecommerce/frontend/src/actions/productActions.js",["252"],"import axios from \"axios\";\nimport {\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_CREATE_REVIEW_FAIL,\n  PRODUCT_CREATE_REVIEW_RESET,\n} from \"../constants/productConstants.js\";\nimport store from \"../store\";\n\nexport const listProducts = (keyword = \"\", pageNumber = \"\") => async (\n  dispatch\n) => {\n  try {\n    dispatch({ type: PRODUCT_LIST_REQUEST });\n    const { data } = await axios.get(\n      `/api/products/?keyword=${keyword}&pageNumber=${pageNumber}`\n    );\n    dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const listProductDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_DETAILS_REQUEST });\n    const { data } = await axios.get(`/api/products/${id}`);\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: PRODUCT_DELETE_REQUEST });\n\n    const token = store.getState().userLogin.userInfo.token;\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    };\n\n    await axios.delete(`/api/products/${id}`, config);\n    dispatch({ type: PRODUCT_DELETE_SUCCESS });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const createProduct = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: PRODUCT_CREATE_REQUEST });\n\n    const token = store.getState().userLogin.userInfo.token;\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    };\n\n    const { data } = await axios.post(`/api/products`, {}, config);\n    dispatch({ type: PRODUCT_CREATE_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const updateProduct = (id, data) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: PRODUCT_UPDATE_REQUEST });\n\n    const token = store.getState().userLogin.userInfo.token;\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    };\n\n    await axios.put(`/api/products/${id}`, data, config);\n    dispatch({ type: PRODUCT_UPDATE_SUCCESS });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const createProductReview = (id, review) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({ type: PRODUCT_CREATE_REVIEW_REQUEST });\n\n    const token = store.getState().userLogin.userInfo.token;\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    };\n\n    await axios.post(`/api/products/${id}/reviews`, review, config);\n    dispatch({ type: PRODUCT_CREATE_REVIEW_SUCCESS });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n","/Users/shravanmeena/Desktop/ecommerce/frontend/src/actions/cartActions.js",[],"/Users/shravanmeena/Desktop/ecommerce/frontend/src/Products.js",[],["253","254"],"/Users/shravanmeena/Desktop/ecommerce/frontend/src/screens/OrderListScreen.js",["255","256","257","258","259","260"],"/Users/shravanmeena/Desktop/ecommerce/frontend/src/component/Rating.js",[],"/Users/shravanmeena/Desktop/ecommerce/frontend/src/component/SearchBox.js",[],"/Users/shravanmeena/Desktop/ecommerce/frontend/src/component/Paginate.js",["261"],"import React, { Component } from \"react\";\nimport { Pagination } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nexport default class Paginate extends Component {\n  render() {\n    const { pages, page, isAdmin = false, keyword = \"\" } = this.props;\n    return (\n      pages > 1 && (\n        <Pagination>\n          {[...Array(pages).keys()].map((x) => (\n            <LinkContainer\n              key={x + 1}\n              to={\n                keyword ? `/search/${keyword}/page/${x + 1}` : `/page/${x + 1}`\n              }>\n              <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\n            </LinkContainer>\n          ))}\n        </Pagination>\n      )\n    );\n  }\n}\n","/Users/shravanmeena/Desktop/ecommerce/frontend/src/component/ProductCarousel.js",[],"/Users/shravanmeena/Desktop/ecommerce/frontend/src/component/Meta.js",[],"/Users/shravanmeena/Desktop/ecommerce/frontend/src/component/common/Error.js",[],"/Users/shravanmeena/Desktop/ecommerce/frontend/src/component/PopularProducts.js",["262","263","264","265"],"import React, { Component } from \"react\";\nimport { Carousel, Row, Col } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport Loader from \"./Loader\";\nimport { Link } from \"react-router-dom\";\n\nexport default class PopularProducts extends Component {\n  constructor() {\n    super();\n    this.state = {\n      topProduct: null,\n    };\n  }\n  componentDidMount() {\n    axios\n      .get(`/api/products/top/product`)\n      .then((res) => {\n        console.log(res.data);\n        this.setState({\n          topProduct: res.data,\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  render() {\n    const { topProduct } = this.state;\n\n    if (topProduct === null) {\n      return <Loader />;\n    }\n    return (\n      <>\n        <h2>Popular Product</h2>\n\n        <Row>\n          <Col>\n            <img\n              src={topProduct[0].image}\n              style={{\n                width: \"100%\",\n                height: 520,\n                objectFit: \"cover\",\n                cursor: \"pointer\",\n              }}\n            />\n            <Link to={`/product/${topProduct[0]._id}`}>\n              <h5 style={{ position: \"absolute\", right: 30, bottom: 20 }}>\n                Shop Now\n              </h5>\n            </Link>\n          </Col>\n          <Col>\n            <div>\n              <img\n                src={topProduct[1].image}\n                style={{\n                  width: \"100%\",\n                  height: 250,\n                  objectFit: \"cover\",\n                  marginBottom: 20,\n                  cursor: \"pointer\",\n                }}\n              />\n              <Link to={`/product/${topProduct[1]._id}`}>\n                <h5 style={{ position: \"absolute\", right: 30, bottom: 290 }}>\n                  Shop Now\n                </h5>\n              </Link>\n            </div>\n\n            <div>\n              <img\n                src={topProduct[2].image}\n                style={{\n                  width: \"100%\",\n                  height: 250,\n                  objectFit: \"cover\",\n                  marginBottom: 20,\n                  cursor: \"pointer\",\n                }}\n              />\n              <Link to={`/product/${topProduct[2]._id}`}>\n                <h5 style={{ position: \"absolute\", right: 30, bottom: 20 }}>\n                  Shop Now\n                </h5>\n              </Link>\n            </div>\n          </Col>\n        </Row>\n      </>\n    );\n  }\n}\n",{"ruleId":"266","replacedBy":"267"},{"ruleId":"268","replacedBy":"269"},{"ruleId":"270","severity":1,"message":"271","line":2,"column":10,"nodeType":"272","messageId":"273","endLine":2,"endColumn":21},{"ruleId":"270","severity":1,"message":"274","line":2,"column":34,"nodeType":"272","messageId":"273","endLine":2,"endColumn":43},{"ruleId":"270","severity":1,"message":"275","line":40,"column":22,"nodeType":"272","messageId":"273","endLine":40,"endColumn":27},{"ruleId":"270","severity":1,"message":"276","line":40,"column":29,"nodeType":"272","messageId":"273","endLine":40,"endColumn":37},{"ruleId":"270","severity":1,"message":"277","line":2,"column":24,"nodeType":"272","messageId":"273","endLine":2,"endColumn":27},{"ruleId":"270","severity":1,"message":"278","line":2,"column":29,"nodeType":"272","messageId":"273","endLine":2,"endColumn":32},{"ruleId":"270","severity":1,"message":"274","line":2,"column":34,"nodeType":"272","messageId":"273","endLine":2,"endColumn":43},{"ruleId":"270","severity":1,"message":"279","line":5,"column":10,"nodeType":"272","messageId":"273","endLine":5,"endColumn":24},{"ruleId":"270","severity":1,"message":"280","line":1,"column":17,"nodeType":"272","messageId":"273","endLine":1,"endColumn":25},{"ruleId":"270","severity":1,"message":"281","line":3,"column":10,"nodeType":"272","messageId":"273","endLine":3,"endColumn":14},{"ruleId":"270","severity":1,"message":"277","line":3,"column":24,"nodeType":"272","messageId":"273","endLine":3,"endColumn":27},{"ruleId":"270","severity":1,"message":"278","line":3,"column":29,"nodeType":"272","messageId":"273","endLine":3,"endColumn":32},{"ruleId":"282","severity":1,"message":"283","line":25,"column":6,"nodeType":"284","endLine":25,"endColumn":40,"suggestions":"285"},{"ruleId":"270","severity":1,"message":"277","line":2,"column":24,"nodeType":"272","messageId":"273","endLine":2,"endColumn":27},{"ruleId":"270","severity":1,"message":"278","line":2,"column":29,"nodeType":"272","messageId":"273","endLine":2,"endColumn":32},{"ruleId":"270","severity":1,"message":"274","line":2,"column":34,"nodeType":"272","messageId":"273","endLine":2,"endColumn":43},{"ruleId":"270","severity":1,"message":"286","line":3,"column":10,"nodeType":"272","messageId":"273","endLine":3,"endColumn":14},{"ruleId":"270","severity":1,"message":"287","line":5,"column":10,"nodeType":"272","messageId":"273","endLine":5,"endColumn":15},{"ruleId":"270","severity":1,"message":"288","line":7,"column":8,"nodeType":"272","messageId":"273","endLine":7,"endColumn":14},{"ruleId":"270","severity":1,"message":"280","line":1,"column":17,"nodeType":"272","messageId":"273","endLine":1,"endColumn":25},{"ruleId":"270","severity":1,"message":"281","line":3,"column":10,"nodeType":"272","messageId":"273","endLine":3,"endColumn":14},{"ruleId":"282","severity":1,"message":"289","line":37,"column":6,"nodeType":"284","endLine":37,"endColumn":65,"suggestions":"290"},{"ruleId":"270","severity":1,"message":"277","line":2,"column":24,"nodeType":"272","messageId":"273","endLine":2,"endColumn":27},{"ruleId":"270","severity":1,"message":"278","line":2,"column":29,"nodeType":"272","messageId":"273","endLine":2,"endColumn":32},{"ruleId":"270","severity":1,"message":"274","line":2,"column":34,"nodeType":"272","messageId":"273","endLine":2,"endColumn":43},{"ruleId":"270","severity":1,"message":"279","line":5,"column":10,"nodeType":"272","messageId":"273","endLine":5,"endColumn":24},{"ruleId":"270","severity":1,"message":"291","line":149,"column":7,"nodeType":"272","messageId":"273","endLine":149,"endColumn":17},{"ruleId":"270","severity":1,"message":"286","line":3,"column":10,"nodeType":"272","messageId":"273","endLine":3,"endColumn":14},{"ruleId":"270","severity":1,"message":"292","line":9,"column":8,"nodeType":"272","messageId":"273","endLine":9,"endColumn":15},{"ruleId":"270","severity":1,"message":"293","line":5,"column":8,"nodeType":"272","messageId":"273","endLine":5,"endColumn":21},{"ruleId":"270","severity":1,"message":"274","line":3,"column":3,"nodeType":"272","messageId":"273","endLine":3,"endColumn":12},{"ruleId":"270","severity":1,"message":"294","line":13,"column":8,"nodeType":"272","messageId":"273","endLine":13,"endColumn":13},{"ruleId":"270","severity":1,"message":"274","line":2,"column":34,"nodeType":"272","messageId":"273","endLine":2,"endColumn":43},{"ruleId":"270","severity":1,"message":"275","line":38,"column":22,"nodeType":"272","messageId":"273","endLine":38,"endColumn":27},{"ruleId":"270","severity":1,"message":"276","line":38,"column":29,"nodeType":"272","messageId":"273","endLine":38,"endColumn":37},{"ruleId":"270","severity":1,"message":"281","line":6,"column":3,"nodeType":"272","messageId":"273","endLine":6,"endColumn":7},{"ruleId":"270","severity":1,"message":"295","line":7,"column":3,"nodeType":"272","messageId":"273","endLine":7,"endColumn":9},{"ruleId":"270","severity":1,"message":"296","line":8,"column":3,"nodeType":"272","messageId":"273","endLine":8,"endColumn":14},{"ruleId":"270","severity":1,"message":"297","line":9,"column":3,"nodeType":"272","messageId":"273","endLine":9,"endColumn":11},{"ruleId":"270","severity":1,"message":"298","line":12,"column":10,"nodeType":"272","messageId":"273","endLine":12,"endColumn":23},{"ruleId":"270","severity":1,"message":"277","line":2,"column":24,"nodeType":"272","messageId":"273","endLine":2,"endColumn":27},{"ruleId":"270","severity":1,"message":"278","line":2,"column":29,"nodeType":"272","messageId":"273","endLine":2,"endColumn":32},{"ruleId":"270","severity":1,"message":"274","line":2,"column":34,"nodeType":"272","messageId":"273","endLine":2,"endColumn":43},{"ruleId":"270","severity":1,"message":"286","line":3,"column":10,"nodeType":"272","messageId":"273","endLine":3,"endColumn":14},{"ruleId":"270","severity":1,"message":"288","line":7,"column":8,"nodeType":"272","messageId":"273","endLine":7,"endColumn":14},{"ruleId":"299","severity":1,"message":"300","line":7,"column":9,"nodeType":"301","endLine":7,"endColumn":64},{"ruleId":"270","severity":1,"message":"302","line":139,"column":13,"nodeType":"272","messageId":"273","endLine":139,"endColumn":17},{"ruleId":"270","severity":1,"message":"303","line":21,"column":3,"nodeType":"272","messageId":"273","endLine":21,"endColumn":30},{"ruleId":"266","replacedBy":"304"},{"ruleId":"268","replacedBy":"305"},{"ruleId":"270","severity":1,"message":"280","line":1,"column":17,"nodeType":"272","messageId":"273","endLine":1,"endColumn":25},{"ruleId":"270","severity":1,"message":"281","line":3,"column":10,"nodeType":"272","messageId":"273","endLine":3,"endColumn":14},{"ruleId":"270","severity":1,"message":"277","line":3,"column":24,"nodeType":"272","messageId":"273","endLine":3,"endColumn":27},{"ruleId":"270","severity":1,"message":"278","line":3,"column":29,"nodeType":"272","messageId":"273","endLine":3,"endColumn":32},{"ruleId":"270","severity":1,"message":"306","line":5,"column":22,"nodeType":"272","messageId":"273","endLine":5,"endColumn":32},{"ruleId":"282","severity":1,"message":"283","line":26,"column":6,"nodeType":"284","endLine":26,"endColumn":25,"suggestions":"307"},{"ruleId":"270","severity":1,"message":"308","line":7,"column":26,"nodeType":"272","messageId":"273","endLine":7,"endColumn":33},{"ruleId":"270","severity":1,"message":"309","line":2,"column":10,"nodeType":"272","messageId":"273","endLine":2,"endColumn":18},{"ruleId":"310","severity":1,"message":"311","line":40,"column":13,"nodeType":"301","endLine":48,"endColumn":15},{"ruleId":"310","severity":1,"message":"311","line":57,"column":15,"nodeType":"301","endLine":66,"endColumn":17},{"ruleId":"310","severity":1,"message":"311","line":75,"column":15,"nodeType":"301","endLine":84,"endColumn":17},"no-native-reassign",["312"],"no-negated-in-lhs",["313"],"no-unused-vars","'createOrder' is defined but never used.","Identifier","unusedVar","'Container' is defined but never used.","'error' is assigned a value but never used.","'userInfo' is assigned a value but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'getUserDetails' is defined but never used.","'useState' is defined but never used.","'Form' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userInfo'. Either include it or remove the dependency array.","ArrayExpression",["314"],"'Link' is defined but never used.","'login' is defined but never used.","'Loader' is defined but never used.","React Hook useEffect has a missing dependency: 'createdProduct.createdProduct._id'. Either include it or remove the dependency array.",["315"],"'numReviews' is assigned a value but never used.","'Message' is defined but never used.","'CheckoutSteps' is defined but never used.","'axios' is defined but never used.","'Button' is defined but never used.","'FormControl' is defined but never used.","'Dropdown' is defined but never used.","'LinkContainer' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'data' is assigned a value but never used.","'PRODUCT_CREATE_REVIEW_RESET' is defined but never used.",["312"],["313"],"'deleteUser' is defined but never used.",["316"],"'isAdmin' is assigned a value but never used.","'Carousel' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"desc":"317","fix":"318"},{"desc":"319","fix":"320"},{"desc":"321","fix":"322"},"Update the dependencies array to be: [dispatch, history, successDelete, userInfo]",{"range":"323","text":"324"},"Update the dependencies array to be: [dispatch, history, userInfo, successDelete, successCreate, createdProduct.createdProduct._id]",{"range":"325","text":"326"},"Update the dependencies array to be: [dispatch, history, userInfo]",{"range":"327","text":"328"},[888,922],"[dispatch, history, successDelete, userInfo]",[1306,1365],"[dispatch, history, userInfo, successDelete, successCreate, createdProduct.createdProduct._id]",[907,926],"[dispatch, history, userInfo]"]